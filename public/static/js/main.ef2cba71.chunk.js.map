{"version":3,"sources":["lib/auth-service.js","lib/Auth.js","components/Navbar.js","pages/Home.js","pages/Signup.js","pages/Login.js","components/BacklogMediaInfo.js","pages/Backlog.js","pages/DoneList.js","components/AddVideoInfo.js","components/AddGameInfo.js","pages/AddMedia.js","pages/Profile.js","components/AnonRoute.js","components/PrivateRoute.js","App.js","index.js"],"names":["authService","this","auth","axios","create","baseURL","process","withCredentials","username","password","platforms","consoles","post","then","data","get","React","createContext","Consumer","Provider","withAuth","WrappedComponent","login","signup","logout","user","isLoggedIn","props","Component","AuthProvider","state","isLoading","setState","catch","err","console","log","me","value","children","class","to","type","onClick","Home","className","src","alt","width","email","allPlatforms","selectedPlatforms","allConsoles","selectedConsoles","handleFormSubmit","event","preventDefault","handleChange","target","name","togglePlatform","id","newPlatforms","newConsoles","includes","splice","indexOf","push","onSubmit","onChange","placeholder","map","eachPlatform","eachConsole","for","BacklogMediaInfo","selectedPlatform","toogleInfo","updatePlatformProp","handleDeleteClick","deleteMediaProp","handleDoneClick","doneStatus","toggleDoneProp","showAdditionalInfo","newToggleInfo","formatDate","d","date","Date","dd","getDate","mm","getMonth","getFullYear","eachMediaProp","userPlatformsProp","userConsolesProp","title","length","slice","platform","image","releaseDate","ranking","done","updated_at","_id","media","filteredMedia","randomClick","previousFilteredMedia","filteredType","userPlatforms","userConsoles","getAllBacklog","apiResponse","firstFilteredArray","filter","e","filterMedia","newState","randomMedia","previousFilteredState","randomNumber","Math","floor","random","element","updatePlatform","put","deleteMedia","mediaId","delete","toggleDone","isItDone","role","eachMedia","AddVideoInfo","selectedResult","selectedResultProp","selectedMediaType","searchTypeProp","availablePlatforms","addResult","ImageUrl","vote_average","overview","release_date","description","first_air_date","poster_path","disabled","selected","AddGameInfo","selectedConsole","availableConsoles","platformCorrected","method","url","headers","params","releasedDate","result","score","add-info-container","searchQuery","searchResults","searchType","handleFormSubmitForGames","newData","apiMediaType","results","selectMediaType","componentDidMount","component","rest","render","App","exact","path","Signup","Login","Backlog","DoneList","AddMedia","Profile","require","config","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ef2cba71.chunk.js","sourcesContent":["import axios from \"axios\";\n\nclass Auth {\n  constructor() {\n    this.auth = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true\n    });\n  }\n\n  signup({ username, password, platforms, consoles }) {\n    return this.auth\n      .post(\"/auth/signup\", { username, password, platforms, consoles })\n      .then(({ data }) => data);\n    // .then((response) => response.data);\n  }\n\n  login({ username, password }) {\n    return this.auth\n      .post(\"/auth/login\", { username, password })\n      .then(({ data }) => data);\n    // .then((response) => response.data);\n  }\n\n  logout() {\n    return this.auth.post(\"/auth/logout\", {}).then(({ data }) => data);\n    // return this.auth.post(\"/auth/logout\", {}).then((response) => response.data);\n  }\n\n  me() {\n    return this.auth.get(\"/auth/me\").then(({ data }) => data);\n    // return this.auth.get(\"/auth/me\").then((response) => response.data);\n  }\n}\n\nconst authService = new Auth();\n// `authService` is the object with the above axios request methods\n\nexport default authService;\n","//\tlib/Auth.js\n\nimport React, { Component } from \"react\";\nimport authService from \"./auth-service\"; // IMPORT functions for axios requests to API\nconst { Consumer, Provider } = React.createContext();\n\n// HOC to create a Consumer\nconst withAuth = WrappedComponent => {\n  return class extends Component {\n    render() {\n      return (\n        <Consumer>\n          {({ login, signup, logout, user, isLoggedIn }) => {\n            return (\n              <WrappedComponent\n                user={user}\n                isLoggedIn={isLoggedIn}\n                login={login}\n                signup={signup}\n                logout={logout}\n                {...this.props}\n              />\n            );\n          }}\n        </Consumer>\n      );\n    }\n  };\n};\n\n/* \n// HOC - function component example of the same functionality\nfunction withAuthFunc(WrappedComponent) {\n  return function(props) {\n    // props will belong to the WrappedComponent\n    return (\n      <Consumer>{value => <WrappedComponent {...value} {...props} />}</Consumer>\n    );\n  };\n}\n */\n\n// Provider\nclass AuthProvider extends React.Component {\n  state = {\n    // contains data about authentication\n    isLoggedIn: false,\n    user: null,\n    isLoading: true\n  };\n\n  componentDidMount() {\n    authService\n      .me() // returns info only if the user has a cookie\n      .then(user =>\n        this.setState({ isLoggedIn: true, user: user, isLoading: false })\n      )\n      .catch(err =>\n        this.setState({ isLoggedIn: false, user: null, isLoading: false })\n      );\n  }\n\n  signup = (username, password, platforms, consoles) => {\n    authService\n      .signup({ username, password, platforms, consoles })\n      .then(user => this.setState({ isLoggedIn: true, user }))\n      .catch(err => console.log(err));\n  };\n\n  login = (username, password) => {\n    authService\n      .login({ username, password })\n      .then(user => this.setState({ isLoggedIn: true, user }))\n      .catch(err => console.log(err));\n  };\n\n  logout = () => {\n    authService\n      .logout()\n      .then(() => this.setState({ isLoggedIn: false, user: null }))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { isLoading, isLoggedIn, user } = this.state;\n    const { login, logout, signup } = this;\n\n    return (\n      <Provider value={{ isLoading, isLoggedIn, user, login, logout, signup }}>\n        {this.props.children}\n      </Provider>\n    );\n    /*\n      <Provider> `value={}` data will be available to all <Consumer> components \n    */\n  }\n}\n\nexport { withAuth, AuthProvider }; // to export multiple things we dont use default.\n\n//      Consumer ,  Provider\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withAuth } from \"./../lib/Auth\";\n\nclass Navbar extends Component {\n  render() {\n    const { user, logout, isLoggedIn } = this.props;\n\n    return (\n      <nav class=\"navbar navbar-light bg-light\">\n        <Link to={\"/\"} class=\"btn btn-outline-info\" type=\"button\">\n        <i class=\"fas fa-home\"></i>\n        </Link>\n        {isLoggedIn ? (\n          <>\n            {/* <p id=\"home-btn\">Welcome {user.username} </p> */}\n            <Link\n             class=\"btn btn-outline-info\" type=\"button\"\n              to={\"/backlog\"}\n            >\n              <i class=\"fas fa-list\"></i>\n            </Link>\n            <Link\n              class=\"btn btn-outline-success\" type=\"button\"\n              to={\"/done\"}\n            >\n              <i class=\"fas fa-tasks\"></i>\n            </Link>\n            <i class=\"fas fa-sign-out-alt btn btn-outline-danger\" type=\"button\" onClick={logout}></i>\n          </>\n        ) : (\n          <>\n            <Link to=\"/login\" class=\"btn btn-outline-success\" type=\"button\">\n              {\" \"}\n              <i class=\"fas fa-sign-in-alt\"></i>\n            </Link>\n            <br />\n            <Link to=\"/signup\" class=\"btn btn-outline-info\" type=\"button\">\n              {\" \"}\n              <i class=\"fas fa-user-plus\"></i>\n            </Link>\n          </>\n        )}\n      </nav>\n    );\n  }\n}\n\nexport default withAuth(Navbar);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Home() {\n  return (\n    <div className=\"homeContainer\">\n      <img src=\"images/logoTransp.png\" alt=\"logo2\" width=\"100%\"/> \n      <Link to=\"/backlog\" type=\"button\" class=\"btn btn-info btn-lg btn-block\">Click Here to Start!</Link>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withAuth } from \"./../lib/Auth\";\n\nclass Signup extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    email: \"\", // not used atm\n    allPlatforms: [\n      \"Netflix\",\n      \"Amazon Prime\",\n      \"Disney+\",\n      \"HBO Now\",\n      \"Plex\",\n      \"Other\"\n    ],\n    selectedPlatforms: [],\n    allConsoles: [\"Xbox\", \"Playstation\", \"Switch\", \"PC\", \"Other\"],\n    selectedConsoles: []\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { username, password, selectedPlatforms, selectedConsoles } = this.state;\n\n    this.props.signup(username, password, selectedPlatforms, selectedConsoles);\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  togglePlatform = event => {\n    event.preventDefault();\n\n    const { name, id } = event.target;\n    let newPlatforms = this.state.selectedPlatforms;\n    let newConsoles = this.state.selectedConsoles;\n\n    if (id === \"platforms\") {\n      if (newPlatforms.includes(name)) {\n        newPlatforms.splice(newPlatforms.indexOf(name), 1);\n      } else {\n        newPlatforms.push(name);\n      }\n      this.setState({ selectedPlatforms: newPlatforms });\n    } else if (id === \"consoles\") {\n      if (newConsoles.includes(name)) {\n        newConsoles.splice(newConsoles.indexOf(name), 1);\n      } else {\n        newConsoles.push(name);\n      }\n      this.setState({ selectedConsoles: newConsoles });\n    }\n  };\n\n  render() {\n    const {\n      username,\n      password,\n      allPlatforms,\n      selectedPlatforms,\n      allConsoles,\n      selectedConsoles\n    } = this.state;\n    return (\n      <div>\n        <h1>Sign Up</h1>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <div class=\"form-group\">\n            <label>Username:</label>\n            <input\n              class=\"form-control\"\n              type=\"text\"\n              name=\"username\"\n              value={username}\n              onChange={this.handleChange}\n              placeholder=\"Your name here\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label>Password:</label>\n            <input\n              class=\"form-control\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n              placeholder=\"And your password here\"\n            />\n          </div>\n\n          <p>Select your owned subscriptions and consoles below!</p>\n\n          {/* Here you can observe magic happening by mapping on arrays and hard-coding style based on .includes */}\n\n          <div class=\"platform-container\">\n            <div class=\"btn-group-vertical platforms-list\">\n              {allPlatforms.map(eachPlatform => {\n                return (\n                  <button\n                    id=\"platforms\"\n                    class={\n                      selectedPlatforms.includes(eachPlatform)\n                        ? \"btn btn-info\"\n                        : \"btn btn-secondary\"\n                    }\n                    onClick={this.togglePlatform}\n                    name={eachPlatform}\n                  >\n                    {eachPlatform}\n                  </button>\n                );\n              })}\n            </div>\n\n            <div class=\"btn-group-vertical platforms-list\">\n              {allConsoles.map(eachConsole => {\n                return (\n                  <button\n                    id=\"consoles\"\n                    class={\n                      selectedConsoles.includes(eachConsole)\n                        ? \"btn btn-info\"\n                        : \"btn btn-secondary\"\n                    }\n                    onClick={this.togglePlatform}\n                    name={eachConsole}\n                  >\n                    {eachConsole}\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n\n          <p>Don't worry, you will be able to edit this later</p>\n\n          {/* <label>Selected Platforms: </label>\n            <ul>\n              {this.state.selectedPlatforms.map(eachPlatform => {\n                return <li>{eachPlatform}</li>;\n              })}\n            </ul> */}\n\n          <div class=\"sign-btn\">\n            <input class=\"btn btn-primary\" type=\"submit\" value=\"Signup\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Signup);\n","import React, { Component } from \"react\";\nimport { withAuth } from \"./../lib/Auth\";\n\nclass Login extends Component {\n  state = { username: \"\", password: \"\" };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { username, password } = this.state;\n\n    this.props.login(username, password);\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { username, password } = this.state;\n\n    return (\n      <div>\n        <h1>Login</h1>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <div class=\"form-group\">\n            <label>Username:</label>\n            <input\n              class=\"form-control\"\n              type=\"text\"\n              name=\"username\"\n              value={username}\n              onChange={this.handleChange}\n              placeholder=\"Your name here\"\n            />\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"exampleInputPassword1\">Password:</label>\n            <input\n              class=\"form-control\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n              placeholder=\"And your password here\"\n            />\n          </div>\n<div class=\"sign-btn\">\n\n          <input class=\"btn btn-primary\" type=\"submit\" value=\"Login\" />\n</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Login);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport class BacklogMediaInfo extends Component {\n  state = {\n    selectedPlatform: \"\",\n    toogleInfo: false\n  };\n\n  handleChange = event => {\n    const { id, value } = event.target;\n    this.props.updatePlatformProp(id, value);\n  };\n\n  handleDeleteClick = (id) => {\n    this.setState({ toogleInfo: false })\n    this.props.deleteMediaProp(id)\n  }\n\n  handleDoneClick = (id, doneStatus) => {\n    this.setState({ toogleInfo: false })\n    this.props.toggleDoneProp(id, doneStatus)\n  }\n\n  showAdditionalInfo = () => {\n    let newToggleInfo;\n    this.state.toogleInfo === false\n      ? (newToggleInfo = true)\n      : (newToggleInfo = false);\n    this.setState({ toogleInfo: newToggleInfo });\n  };\n\n  // Thank you Capu!\n  formatDate = d => {\n    let date = new Date(d);\n    let dd = date.getDate(); \n    let mm = date.getMonth()+1;\n    let yyyy = date.getFullYear(); \n    if(dd<10){dd='0'+dd} ;\n    if(mm<10){mm='0'+mm};\n    return d = dd+'/'+mm+'/'+yyyy;\n  } \n\ncomponentWillUnmount() {\n  this.setState({ toogleInfo: false} )\n}\n\n  render() {\n    const {\n      eachMediaProp,\n      userPlatformsProp,\n      userConsolesProp,\n      toggleDoneProp\n    } = this.props;\n    return (\n      <div>\n        <button\n          class=\"list-group-item list-group-item-action list-items\"\n          onClick={this.showAdditionalInfo}\n        >\n          {/* Magnificent ternary to add icon depending on media type */}\n          {eachMediaProp.type === \"Series\" ? (\n            <i class=\"fas fa-tv\"></i>\n          ) : eachMediaProp.type === \"Film\" ? (\n            <i class=\"fas fa-film\"></i>\n          ) : eachMediaProp.type === \"Game\" ? (\n            <i class=\"fas fa-gamepad\"></i>\n          ) : null}\n          <b>\n            {\" \"}\n            {eachMediaProp.title.length < 20\n              ? eachMediaProp.title\n              : eachMediaProp.title.slice(0, 20) + \"...\"}{\" \"}\n          </b>\n          in\n          <b> {eachMediaProp.platform}</b>\n        </button>\n        <br />\n\n        {/* TERNARY OPERATOR SHOULD SHOW THE DIV AS AN ADITIONAL COMPONENT */}\n        {this.state.toogleInfo ? (\n          <div>\n            <div class=\"card\">\n              <div class=\"add-info-container\">\n                <div>\n                  <img src={eachMediaProp.image} class=\"card-img\" alt=\"...\" />\n                </div>\n                <div class=\"card-body\">\n                  <p class=\"card-text\">\n                    <b>title: </b>\n                    {eachMediaProp.title}\n                    <br />\n                    <b>Release Date:</b> {this.formatDate(eachMediaProp.releaseDate)}\n                    <br />\n                    <b>Rating:</b> {eachMediaProp.ranking}\n                    <br />\n                    {\n                    eachMediaProp.done ? \n                    <p><b>Finished Date:</b> { this.formatDate(eachMediaProp.updated_at) }</p>\n                    : null\n                    }\n\n                  </p>\n                </div>\n              </div>\n\n              <div class=\"add-info-container\">\n                <h5>Platform:</h5>\n\n                {eachMediaProp.done ? (\n                  <h5>{eachMediaProp.platform}</h5>\n                ) : (\n                  <select\n                    type=\"button\"\n                    class=\"btn btn-outline-info info-btns platform-dropdown\"\n                    id={eachMediaProp._id}\n                    onChange={this.handleChange}\n                    name=\"platforms\"\n                    value={eachMediaProp.platform}\n                  >\n                    {/* To show subscriptions/platforms to choose from based only on user profile owned subscriptions/platforms */}\n                    {eachMediaProp.type === \"Game\"\n                      ? userConsolesProp.map(eachConsole => {\n                          return (\n                            <option value={eachConsole}>{eachConsole}</option>\n                          );\n                        })\n                      : userPlatformsProp.map(eachPlatform => {\n                          return (\n                            <option value={eachPlatform}>{eachPlatform}</option>\n                          );\n                        })}\n                  </select>\n                )}\n              </div>\n\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-danger info-btns\"\n                onClick={() => this.handleDeleteClick(eachMediaProp._id)}\n              >\n                delete\n              </button>\n\n              <button\n                type=\"button\"\n                class={ eachMediaProp.done ? \"btn btn-outline-info info-btns\" : \"btn btn-outline-success info-btns\" }\n                onClick={() =>\n                  this.handleDoneClick(eachMediaProp._id, eachMediaProp.done)\n                }\n              >\n               { eachMediaProp.done ? \"undo\" : \"done\" }\n              </button>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default BacklogMediaInfo;\n","import React, { Component } from \"react\";\nimport { withAuth } from \"../lib/Auth\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport BacklogMediaInfo from \"../components/BacklogMediaInfo\";\n\nclass Backlog extends Component {\n  state = {\n    media: [],\n    filteredMedia: [], // media state mutated through filter by media type\n    randomClick: false,\n    previousFilteredMedia: [], // previous state for use in random button toggle off\n    isLoading: true,\n    filteredType: \"\", // set as none on the first load\n    userPlatforms: [],\n    userConsoles: []\n  };\n\n  // to get updated data from backend\n  getAllBacklog = () => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    axios\n      .get(\n        `${process.env.REACT_APP_API_URL}/api/backlog`,\n\n        {\n          withCredentials: true\n        }\n      )\n      .then(apiResponse => {\n        let firstFilteredArray = apiResponse.data.filter(\n          e => e.type === this.state.filteredType\n        ); // To show only films on first backlog load\n        this.setState({\n          media: apiResponse.data,\n          filteredMedia: firstFilteredArray,\n          previousFilteredMedia: firstFilteredArray,\n          randomClick: false,\n          isLoading: false\n        });\n      });\n  };\n\n  // to filter backlog list by media type (Films, Series and Games)\n  filterMedia = event => {\n    let initialState = [...this.state.media];\n    let newState = initialState.filter(e => e.type === event.target.name);\n    this.setState({\n      filteredMedia: newState,\n      previousFilteredMedia: newState,\n      randomClick: false,\n      filteredType: event.target.name\n    });\n  };\n\n  // to select a random media from list\n  randomMedia = () => {\n    if (this.state.randomClick === false) {\n      let previousFilteredState = this.state.filteredMedia;\n      let randomNumber = Math.floor(\n        Math.random() * previousFilteredState.length\n      );\n      let newState = previousFilteredState.filter(\n        element => element._id === previousFilteredState[randomNumber]._id\n      );\n      this.setState({ filteredMedia: newState, randomClick: true });\n    } else if (this.state.randomClick === true) {\n      this.setState({\n        filteredMedia: this.state.previousFilteredMedia,\n        randomClick: false\n      });\n    }\n  };\n\n  // to update the platform via dropdown onChange\n  updatePlatform = (id, value) => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    axios\n      .put(\n        `${process.env.REACT_APP_API_URL}/api/media/${id}`,\n        {\n          platform: value\n        },\n        {\n          withCredentials: true\n        }\n      )\n      .then(() => this.getAllBacklog())\n      .catch(err => console.log(err));\n  };\n\n  // to delete element from database and refresh\n  deleteMedia = mediaId => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/media/${mediaId}`, {\n        withCredentials: true\n      })\n      .then(() => this.getAllBacklog())\n      .catch(err => console.log(err));\n  };\n\n  componentDidMount() {\n    //  fetch the data from API befor initial render\n    this.getAllBacklog();\n\n    // THIS SHOULD GO TO BACKEND SERVICES USED ALSO ON PROFILE AND ADDFILM\n    axios\n      .get(\n        `${process.env.REACT_APP_API_URL}/profile/${this.props.user._id}`,\n\n        {\n          withCredentials: true\n        }\n      )\n      .then(apiResponse => {\n        this.setState({\n          userPlatforms: apiResponse.data.platforms,\n          userConsoles: apiResponse.data.consoles\n        });\n      });\n  }\n\n  toggleDone = (id, isItDone) => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    let done;\n    isItDone ? (done = false) : (done = true);\n    axios\n      .put(\n        `${process.env.REACT_APP_API_URL}/api/media/${id}`,\n        {\n          done\n        },\n        {\n          withCredentials: true\n        }\n      )\n      .then(() => {\n        this.getAllBacklog();\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const {\n      filteredMedia,\n      isLoading,\n      userPlatforms,\n      userConsoles\n    } = this.state;\n\n    return (\n      <div>\n        <nav class=\"navbar navbar-light bg-light\">\n          <button\n            type=\"button\"\n            class=\"btn btn-info\"\n            onClick={this.filterMedia}\n            name=\"Series\"\n          >\n            <i class=\"fas fa-tv\"></i> Series\n          </button>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-info\"\n            onClick={this.filterMedia}\n            name=\"Film\"\n          >\n            <i class=\"fas fa-film\"></i> Films\n          </button>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-info\"\n            onClick={this.filterMedia}\n            name=\"Game\"\n          >\n            <i class=\"fas fa-gamepad\"></i> Games\n          </button>\n        </nav>\n        <div class=\"alert alert-info\" role=\"alert\">\n          Backlog List\n        </div>\n\n        <div class=\"list-group\">\n          {!isLoading\n            ? filteredMedia.map(eachMedia => {\n                return (\n                  < BacklogMediaInfo\n                    eachMediaProp={eachMedia}\n                    userPlatformsProp={userPlatforms}\n                    userConsolesProp={userConsoles}\n                    updatePlatformProp={this.updatePlatform}\n                    deleteMediaProp={this.deleteMedia}\n                    toggleDoneProp={this.toggleDone}\n                  />\n                );\n              })\n            : null}\n        </div>\n\n        <nav class=\"navbar navbar-light bg-light footerbar\">\n          <Link class=\"btn btn-outline-info\" type=\"button\" to={\"/add/films\"}>\n            <i class=\"fas fa-plus\"></i>\n          </Link>\n          <button\n            onClick={this.randomMedia}\n            class=\"btn btn-info btn-circle btn-xl\"\n          >\n            <i class=\"fas fa-random icon\"></i>\n          </button>\n\n          <Link class=\"btn btn-outline-info\" type=\"button\" to={\"/profile\"}>\n            <i class=\"fas fa-user\"></i>\n          </Link>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Backlog);\n","import React, { Component } from \"react\";\nimport { withAuth } from \"../lib/Auth\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport BacklogMediaInfo from \"../components/BacklogMediaInfo\";\n\nclass DoneList extends Component {\n  state = {\n    media: [],\n    filteredMedia: [], // media state mutated through filter by media type\n    isLoading: true,\n    filteredType: \"\" // set as none on the first load\n  };\n\n  // to get updated data from backend\n  getAllBacklog = () => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/done`, {\n        withCredentials: true\n      })\n      .then(apiResponse => {\n        let firstFilteredArray = apiResponse.data.filter(\n          e => e.type === this.state.filteredType\n        ); // To show only films on first backlog load\n        this.setState({\n          media: apiResponse.data,\n          filteredMedia: firstFilteredArray,\n          isLoading: false\n        });\n      });\n  };\n\n  // to filter backlog list by media type (Films, Series and Games)\n  filterMedia = event => {\n    let initialState = [...this.state.media];\n    let newState = initialState.filter(e => e.type === event.target.name);\n    this.setState({\n      filteredMedia: newState,\n      previousFilteredMedia: newState,\n      randomClick: false,\n      filteredType: event.target.name\n    });\n  };\n\n  // to delete element from database and refresh\n  deleteMedia = mediaId => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/media/${mediaId}`, {\n        withCredentials: true\n      })\n      .then(() => this.getAllBacklog())\n      .catch(err => console.log(err));\n  };\n\n  componentDidMount() {\n    //  fetch the data from API befor initial render\n    this.getAllBacklog();\n  }\n\n  toggleDone = (id, isItDone) => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    let done;\n    isItDone ? (done = false) : (done = true);\n    axios\n      .put(\n        `${process.env.REACT_APP_API_URL}/api/media/${id}`,\n        {\n          done\n        },\n        {\n          withCredentials: true\n        }\n      )\n      .then(() => {\n        this.getAllBacklog();\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { filteredMedia, isLoading } = this.state;\n\n    return (\n      <div>\n        <nav class=\"navbar navbar-light bg-light\">\n          <button\n            type=\"button\"\n            class=\"btn btn-success\"\n            onClick={this.filterMedia}\n            name=\"Series\"\n          >\n            <i class=\"fas fa-tv\"></i> Series\n          </button>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-success\"\n            onClick={this.filterMedia}\n            name=\"Film\"\n          >\n            <i class=\"fas fa-film\"></i> Films\n          </button>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-success\"\n            onClick={this.filterMedia}\n            name=\"Game\"\n          >\n            <i class=\"fas fa-gamepad\"></i> Games\n          </button>\n        </nav>\n        <div class=\"alert alert-success\" role=\"alert\">\n          Done List\n        </div>\n\n        <div class=\"list-group\">\n          {!isLoading\n            ? filteredMedia.map(eachMedia => {\n                return (\n                  <BacklogMediaInfo\n                    eachMediaProp={eachMedia}\n                    deleteMediaProp={this.deleteMedia}\n                    toggleDoneProp={this.toggleDone}\n                  />\n                );\n              })\n            : null}\n        </div>\n        <nav class=\"navbar navbar-light bg-light footerbar\">\n          <Link class=\"btn btn-success btn-circle\" to={\"/backlog\"}>\n            <i class=\"fas fa-arrow-alt-circle-left\"></i>\n          </Link>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(DoneList);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport class AddVideoInfo extends Component {\n  state = {\n    selectedResult: this.props.selectedResultProp,\n    selectedPlatform: \"\",\n    selectedMediaType: this.props.searchTypeProp,\n    availablePlatforms: this.props.userPlatformsProp\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n    console.log(value);\n  };\n\n  addResult = (event, media, ImageUrl) => {\n    event.preventDefault();\n    if (this.state.selectedMediaType === \"Film\") {\n      // API FOR FILMS\n      const { title, vote_average, overview, release_date } = media;\n      // THIS SHOULD GO TO BACKEND API SERVICES\n      axios\n        .post(\n          `${process.env.REACT_APP_API_URL}/api/add`,\n          {\n            title, // Different name for series\n            type: this.state.selectedMediaType,\n            done: false,\n            platform: this.state.selectedPlatform,\n            image: ImageUrl,\n            ranking: vote_average,\n            description: overview,\n            releaseDate: release_date // Different name for series\n          },\n          { withCredentials: true }\n        )\n        .then(data => console.log(\"Film created:\", data))\n        .catch(err => console.log(err));\n    } else if (this.state.selectedMediaType === \"Series\") {\n      // API FOR SERIES\n      const { name, vote_average, overview, first_air_date } = media;\n      // THIS SHOULD GO TO BACKEND API SERVICES\n      axios\n        .post(\n          `${process.env.REACT_APP_API_URL}/api/add`,\n          {\n            title: name,\n            type: this.state.selectedMediaType,\n            done: false,\n            platform: this.state.selectedPlatform,\n            image: ImageUrl,\n            ranking: vote_average,\n            description: overview,\n            releaseDate: first_air_date\n          },\n          { withCredentials: true }\n        )\n        .then(data => console.log(\"Film created:\", data))\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    const { selectedResult, selectedPlatform, availablePlatforms } = this.state;\n    const ImageUrl =\n      \"https://image.tmdb.org/t/p/w185_and_h278_bestv2/\" +\n      selectedResult.poster_path;\n    return (\n      <div class=\"card\">\n        <div class=\"add-info-container\">\n          <div>\n            <img class=\"card-img-top\" src={ImageUrl} alt=\"poster\" />\n          </div>\n\n          <div class=\"card-body\">\n            <p class=\"card-text\">\n              <b>title:</b>{\" \"}\n              {selectedResult.title\n                ? selectedResult.title\n                : selectedResult.name}\n                <br />\n              <b>Rating:</b> {selectedResult.vote_average}\n              <br />\n              <b>Release Date:</b>{\" \"}\n              {selectedResult.first_air_date\n                ? selectedResult.first_air_date\n                : selectedResult.release_date}\n            </p>\n          </div>\n        </div>\n\n        <div class=\"card-body\">\n          <select\n            id={selectedResult.title}\n            name=\"selectedPlatform\"\n            value={selectedPlatform}\n            onChange={this.handleChange}\n          >\n            {/* below is a placeholder for dropdown */}\n            <option value=\"\" disabled selected>\n              Select your option\n            </option>\n            {/* To show subscriptions/platforms to choose from based only on user profile owned subscriptions/platforms */}\n            {availablePlatforms.map(eachPlatform => {\n              return <option value={eachPlatform}>{eachPlatform}</option>;\n            })}\n          </select>\n\n          <button\n            class=\"btn btn-info\"\n            onClick={event => this.addResult(event, selectedResult, ImageUrl)}\n          >\n            Add to Backlog\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddVideoInfo;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport class AddGameInfo extends Component {\n  state = {\n    selectedResult: this.props.selectedResultProp,\n    selectedConsole: \"\",\n    selectedMediaType: this.props.searchTypeProp,\n    availableConsoles: this.props.userConsolesProp\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  addResult = (event, media, ImageUrl) => {\n    event.preventDefault();\n\n    // THIS SHOULD GO TO EXTERNAL API SERVICES\n\n    // switch case to fix platform field format because this API is SspECiaL ¬¬\n    let platformCorrected = \"\";\n    switch (this.state.selectedResult.platform) {\n      case \"Switch\":\n        platformCorrected = \"switch\";\n        break;\n      case \"WII\":\n        platformCorrected = \"wii\";\n        break;\n      case \"WIIU\":\n        platformCorrected = \"wii-u\";\n        break;\n      case \"GC\":\n        platformCorrected = \"gamecube\";\n        break;\n      case \"N64\":\n        platformCorrected = \"nintendo-64\";\n        break;\n      case \"3DS\":\n        platformCorrected = \"3ds\";\n        break;\n      case \"DS\":\n        platformCorrected = \"ds\";\n        break;\n      case \"PS4\":\n        platformCorrected = \"playstation-4\";\n        break;\n      case \"PS3\":\n        platformCorrected = \"playstation-3\";\n        break;\n      case \"PS2\":\n        platformCorrected = \"playstation-2\";\n        break;\n      case \"PS\":\n        platformCorrected = \"playstation\";\n        break;\n      case \"PSP\":\n        platformCorrected = \"psp\";\n        break;\n      case \"VITA\":\n        platformCorrected = \"playstation-vita\";\n        break;\n      case \"PC\":\n        platformCorrected = \"pc\";\n        break;\n      case \"XONE\":\n        platformCorrected = \"xbox-one\";\n        break;\n      case \"Xbox 360\":\n        platformCorrected = \"xbox-360\";\n        break;\n      case \"Xbox\":\n        platformCorrected = \"xbox\";\n        break;\n      default:\n        platformCorrected = \"\";\n    }\n\n    axios({\n      method: \"GET\",\n      url: `https://chicken-coop.p.rapidapi.com/games/${this.state.selectedResult.title}`,\n      headers: {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\": \"chicken-coop.p.rapidapi.com\",\n        \"x-rapidapi-key\": process.env.REACT_APP_GAMES_CLIENT_KEY\n      },\n      params: {\n        platform: `${platformCorrected}`\n      }\n    })\n      .then(data => {\n        // below is to change the str date from api to Date format\n        let releasedDate = new Date (data.data.result.releaseDate)\n        // THIS SHOULD GO TO BACKEND API SERVICES\n        const {\n          title,\n          image,\n          score,\n          description,\n        } = data.data.result;\n        axios\n          .post(\n            `${process.env.REACT_APP_API_URL}/api/add`,\n            {\n              title,\n              type: this.state.selectedMediaType,\n              done: false,\n              platform: this.state.selectedConsole,\n              image,\n              ranking: score,\n              description,\n              releaseDate: releasedDate\n            },\n            { withCredentials: true }\n          )\n          .then(data => console.log(\"Game created:\", data))\n          .catch(err => console.log(err));\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { selectedResult, selectedConsole, availableConsoles } = this.state;\n    return (\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h7>{selectedResult.title} on {selectedResult.platform}</h7>\n\n          <div add-info-container>\n\n              <select\n                class=\"btn btn-outline-info platforms-list\"\n                id={selectedResult.title}\n                name=\"selectedConsole\"\n                value={selectedConsole}\n                onChange={this.handleChange}\n              >\n                {/* below is a placeholder for dropdown */}\n                <option value=\"\" disabled selected>\n                  Select!\n                </option>\n                {/* To show subscriptions/platforms to choose from based only on user profile owned subscriptions/platforms */}\n                {availableConsoles.map(eachConsole => {\n                  return <option value={eachConsole}>{eachConsole}</option>;\n                })}\n              </select>\n\n              <button\n                class=\"btn btn-info\"\n                onClick={event => this.addResult(event, selectedResult)}\n              >\n                Add to Backlog\n              </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddGameInfo;\n","import React, { Component } from \"react\";\nimport { withAuth } from \"../lib/Auth\";\nimport axios from \"axios\";\nimport AddVideoInfo from \"../components/AddVideoInfo\";\nimport AddGameInfo from \"../components/AddGameInfo\";\nimport { Link } from \"react-router-dom\";\n\n// import { HowLongToBeatService, HowLongToBeatEntry } from \"howlongtobeat\";\n// let hltbService = new HowLongToBeatService();\n\nexport class AddMedia extends Component {\n  state = {\n    searchQuery: \"\",\n    searchResults: [],\n    searchType: \"\", // to use different api url\n    userPlatforms: [],\n    userConsoles: []\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmitForGames = event => {\n    event.preventDefault();\n    const { searchQuery } = this.state;\n\n    // hltbService.search(\"Nioh\").then(result => console.log(result));\n\n    axios({\n      method: \"GET\",\n      url: \"https://chicken-coop.p.rapidapi.com/games\",\n      headers: {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\": \"chicken-coop.p.rapidapi.com\",\n        \"x-rapidapi-key\": process.env.REACT_APP_GAMES_CLIENT_KEY // NEED TO CHANGE THIS TO .ENV API KEY\n      },\n      params: {\n        title: `${searchQuery}`\n      }\n    })\n      .then(data => {\n        // to remove data without images because who needs those anyway\n        const newData = data.data.result.filter(\n          e => e.image !== null\n        );\n        this.setState({ searchResults: newData });\n      })\n      .catch(err => console.log(err));\n\n    this.setState({ searchResults: [] });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { searchQuery, searchType } = this.state;\n\n    // variable to re-use films/series api axios\n    let apiMediaType = \"\";\n    searchType === \"Film\" ? (apiMediaType = \"movie\") : (apiMediaType = \"tv\");\n    axios({\n      method: \"GET\",\n      url: `https://api.themoviedb.org/3/search/${apiMediaType}?api_key=${process.env.REACT_APP_CLIENT_KEY}&query=${searchQuery}&page=1`\n    })\n      .then(data => {\n        // to remove data without images because who wants those anyway\n        const newData = data.data.results.filter(\n          e => e.poster_path !== null\n        );\n        this.setState({ searchResults: newData });\n      })\n      .catch(err => console.log(err));\n\n    this.setState({ searchResults: [] });\n  };\n\n  selectMediaType = event => {\n    const { name } = event.target;\n    this.setState({ searchResults: [], searchType: name, searchQuery: \"\" });\n  };\n\n  componentDidMount = () => {\n    // THIS SHOULD GO TO BACKEND SERVICES USED ALSO ON PROFILE AND ADDFILM\n    axios\n      .get(\n        `${process.env.REACT_APP_API_URL}/profile/${this.props.user._id}`,\n\n        {\n          withCredentials: true\n        }\n      )\n      .then(apiResponse => {\n        this.setState({\n          userPlatforms: apiResponse.data.platforms,\n          userConsoles: apiResponse.data.consoles\n        });\n      });\n  };\n\n  render() {\n    const {\n      searchQuery,\n      searchResults,\n      searchType,\n      userPlatforms,\n      userConsoles\n    } = this.state;\n\n    return (\n      <div>\n        <nav class=\"navbar navbar-light bg-light\">\n          <button\n            type=\"button\"\n            class=\"btn btn-info\"\n            onClick={this.selectMediaType}\n            name=\"Series\"\n          >\n            <i class=\"fas fa-tv\"></i> Series\n          </button>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-info\"\n            onClick={this.selectMediaType}\n            name=\"Film\"\n          >\n            <i class=\"fas fa-film\"></i> Films\n          </button>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-info\"\n            onClick={this.selectMediaType}\n            name=\"Game\"\n          >\n            <i class=\"fas fa-gamepad\"></i> Games\n          </button>\n        </nav>\n\n        {searchType === \"\" ? (\n          <div class=\"alert alert-warning\" role=\"alert\">\n            <h3>Select a media type!</h3>\n          </div>\n        ) : (\n          <form\n            class=\"form-inline\"\n            onSubmit={\n              searchType === \"Game\"\n                ? this.handleFormSubmitForGames\n                : this.handleFormSubmit\n            }\n          >\n            <input\n              class=\"form-control mr-sm-2 search-input\"\n              type=\"search\"\n              name=\"searchQuery\"\n              value={searchQuery}\n              onChange={this.handleChange}\n              placeholder={searchType}\n            />\n            <input\n              class=\"btn btn-outline-success my-2 my-sm-0\"\n              type=\"submit\"\n              value=\"Search\"\n            />\n          </form>\n        )}\n\n        <div class=\"list-group\">\n          <div class=\"column flex-column flex-nowrap\">\n            {/* ternary on map to show different components based on if it is film/series or games */}\n\n            {searchType === \"Game\"\n              ? searchResults.map(selectedResult => {\n                  return (\n                    <AddGameInfo\n                      selectedResultProp={selectedResult}\n                      searchTypeProp={searchType}\n                      userConsolesProp={userConsoles}\n                    />\n                  );\n                })\n              : searchResults.map(selectedResult => {\n                  return (\n                    <AddVideoInfo\n                      selectedResultProp={selectedResult}\n                      searchTypeProp={searchType}\n                      userPlatformsProp={userPlatforms}\n                    />\n                  );\n                })}\n          </div>\n        </div>\n\n        <nav class=\"navbar navbar-light bg-light footerbar\">\n          <Link class=\"btn btn-info btn-circle\" to={\"/backlog\"}>\n            <i class=\"fas fa-arrow-alt-circle-left\"></i>\n          </Link>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(AddMedia);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withAuth } from \"./../lib/Auth\";\nimport axios from \"axios\";\n\nclass Profile extends Component {\n  state = {\n    username: \"\",\n    password: \"\", // not used here atm\n    email: \"\", // not used atm\n    allPlatforms: [\n      \"Netflix\",\n      \"Amazon Prime\",\n      \"Disney+\",\n      \"HBO Now\",\n      \"Plex\",\n      \"Other\"\n    ],\n    selectedPlatforms: [],\n    allConsoles: [\"Xbox\", \"Playstation\", \"Switch\", \"PC\", \"Other\"],\n    selectedConsoles: []\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { selectedPlatforms, selectedConsoles } = this.state;\n\n    // use put route here\n\n    axios\n      .put(\n        `${process.env.REACT_APP_API_URL}/profile/${this.props.user._id}`,\n        {\n          platforms: selectedPlatforms,\n          consoles: selectedConsoles\n        },\n        {\n          withCredentials: true\n        }\n      )\n      .then(() => console.log(\"User platforms updated\"))\n      .catch(err => console.log(err));\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  togglePlatform = event => {\n    event.preventDefault();\n\n    const { name, id } = event.target;\n    let newPlatforms = this.state.selectedPlatforms;\n    let newConsoles = this.state.selectedConsoles;\n\n    if (id === \"platforms\") {\n      if (newPlatforms.includes(name)) {\n        newPlatforms.splice(newPlatforms.indexOf(name), 1);\n      } else {\n        newPlatforms.push(name);\n      }\n      this.setState({ selectedPlatforms: newPlatforms });\n    } else if (id === \"consoles\") {\n      if (newConsoles.includes(name)) {\n        newConsoles.splice(newConsoles.indexOf(name), 1);\n      } else {\n        newConsoles.push(name);\n      }\n      this.setState({ selectedConsoles: newConsoles });\n    }\n  };\n\n  componentDidMount = () => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    axios\n      .get(\n        `${process.env.REACT_APP_API_URL}/profile/${this.props.user._id}`,\n\n        {\n          withCredentials: true\n        }\n      )\n      .then(apiResponse => {\n        this.setState({\n          username: apiResponse.data.username,\n          selectedPlatforms: apiResponse.data.platforms,\n          selectedConsoles: apiResponse.data.consoles\n        });\n      });\n  };\n\n  render() {\n    const {\n      username,\n      allPlatforms,\n      selectedPlatforms,\n      allConsoles,\n      selectedConsoles\n    } = this.state;\n    return (\n      <div>\n        <h4>Welcome to your profile {username}</h4>\n        <form onSubmit={this.handleFormSubmit}>\n          <p>Update your subscriptions and consoles below!</p>\n\n          {/* Here you can observe magic happening by mapping on arrays and hard-coding style based on .includes */}\n\n          <div class=\"platform-container\">\n            <div class=\"btn-group-vertical platforms-list\">\n              {allPlatforms.map(eachPlatform => {\n                return (\n                  <button\n                    id=\"platforms\"\n                    class={\n                      selectedPlatforms.includes(eachPlatform)\n                        ? \"btn btn-info\"\n                        : \"btn btn-secondary\"\n                    }\n                    onClick={this.togglePlatform}\n                    name={eachPlatform}\n                  >\n                    {eachPlatform}\n                  </button>\n                );\n              })}\n            </div>\n\n            <div class=\"btn-group-vertical platforms-list\">\n              {allConsoles.map(eachConsole => {\n                return (\n                  <button\n                    id=\"consoles\"\n                    class={\n                      selectedConsoles.includes(eachConsole)\n                        ? \"btn btn-info\"\n                        : \"btn btn-secondary\"\n                    }\n                    onClick={this.togglePlatform}\n                    name={eachConsole}\n                  >\n                    {eachConsole}\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n\n          <p>You can edit this anytime you want!</p>\n\n          {/* <label>Selected Platforms: </label>\n            <ul>\n              {this.state.selectedPlatforms.map(eachPlatform => {\n                return <li>{eachPlatform}</li>;\n              })}\n            </ul> */}\n\n          <div class=\"sign-btn\">\n            <input class=\"btn btn-primary\" type=\"submit\" value=\"Update\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Profile);\n","//\tcomponents/AnonRoute.js\n\n// gives you public pages/components\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withAuth } from \"../lib/Auth\";\n\nfunction AnonRoute({ component: Component, isLoggedIn, ...rest }) {\n  return (\n    // <Route\n    //   {...rest}\n    //   render={props =>\n    //     !isLoggedIn ? <Component {...props} /> : <Redirect to=\"/private\" />\n    //   }\n    // />\n    <Route\n      {...rest}\n      render={function(props) {\n        if (isLoggedIn) return <Redirect to=\"/backlog\" />;\n        else if (!isLoggedIn) return <Component {...props} />;\n      }}\n    />\n  );\n}\n\nexport default withAuth(AnonRoute);\n","//\tcomponents/PrivateRoute.js\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withAuth } from \"../lib/Auth\";\n\nfunction PrivateRoute({ component: Component, isLoggedIn, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={function(props) {\n        if (isLoggedIn) return <Component {...props} />;\n        else if (!isLoggedIn) return <Redirect to=\"/login\" />;\n      }}\n    />\n  );\n}\n\nexport default withAuth(PrivateRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Backlog from \"./pages/Backlog\";\nimport DoneList from \"./pages/DoneList\";\nimport AddMedia from \"./pages/AddMedia\";\nimport Profile from \"./pages/Profile\";\n\nimport AnonRoute from \"./components/AnonRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Navbar />\n\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n\n          <AnonRoute exact path=\"/signup\" component={Signup} />\n          <AnonRoute exact path=\"/login\" component={Login} />\n\n          <PrivateRoute exact path=\"/backlog\" component={Backlog} />\n          <PrivateRoute exact path=\"/done\" component={DoneList} />\n          <PrivateRoute exact path=\"/add/films\" component={AddMedia} />\n          <PrivateRoute exact path=\"/profile\" component={Profile} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { AuthProvider } from \"./lib/Auth\";\nimport App from \"./App\";\nrequire('dotenv').config();\n\nReactDOM.render(\n  <Router>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}