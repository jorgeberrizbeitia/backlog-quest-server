{"version":3,"sources":["lib/auth-service.js","lib/Auth.js","components/Navbar.js","pages/Home.js","pages/Signup.js","pages/Login.js","components/BacklogFilmInfo.js","pages/Backlog.js","components/DoneMediaInfo.js","pages/DoneList.js","components/AddFilmInfo.js","components/AddGameInfo.js","pages/AddFilms.js","pages/Profile.js","components/AnonRoute.js","components/PrivateRoute.js","App.js","index.js"],"names":["authService","this","auth","axios","create","baseURL","process","withCredentials","username","password","platforms","consoles","post","then","data","get","React","createContext","Consumer","Provider","withAuth","WrappedComponent","login","signup","logout","user","isLoggedIn","props","Component","AuthProvider","state","isLoading","setState","catch","err","console","log","me","value","children","class","to","type","onClick","Home","src","alt","width","email","allPlatforms","selectedPlatforms","allConsoles","selectedConsoles","handleFormSubmit","event","preventDefault","handleChange","target","name","togglePlatform","id","newPlatforms","newConsoles","includes","splice","indexOf","push","onSubmit","onChange","placeholder","map","eachPlatform","style","background","eachConsole","for","BacklogFilmInfo","selectedPlatform","toogleInfo","updatePlatformProp","showAdditionalInfo","newToggleInfo","eachMediaProp","title","platform","image","releaseDate","description","_id","userPlatformsProp","deleteMediaProp","toggleDoneProp","done","media","filteredMedia","randomClick","previousFilteredMedia","filteredType","userPlatforms","getAllBacklog","apiResponse","firstFilteredArray","filter","e","filterMedia","newState","randomMedia","previousFilteredState","randomNumber","Math","floor","random","length","element","updatePlatform","put","deleteMedia","mediaId","delete","toggleDone","isItDone","eachMedia","DoneMediaInfo","ranking","updated_at","userProp","AddFilmInfo","selectedResult","selectedResultProp","selectedMediaType","searchTypeProp","availablePlatforms","addResult","ImageUrl","vote_average","overview","release_date","first_air_date","poster_path","disabled","selected","AddGameInfo","selectedConsole","availableConsoles","userConsolesProp","platformCorrected","method","url","headers","params","result","score","releasedDate","searchQuery","searchResults","searchType","userConsoles","handleFormSubmitForGames","apiMediaType","newData","results","undefined","selectMediaType","componentDidMount","component","rest","render","App","className","exact","path","Signup","Login","Backlog","DoneList","AddFilms","Profile","require","config","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0fbf82c4.chunk.js","sourcesContent":["import axios from \"axios\";\n\nclass Auth {\n  constructor() {\n    this.auth = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true\n    });\n  }\n\n  signup({ username, password, platforms, consoles }) {\n    return this.auth\n      .post(\"/auth/signup\", { username, password, platforms, consoles })\n      .then(({ data }) => data);\n    // .then((response) => response.data);\n  }\n\n  login({ username, password }) {\n    return this.auth\n      .post(\"/auth/login\", { username, password })\n      .then(({ data }) => data);\n    // .then((response) => response.data);\n  }\n\n  logout() {\n    return this.auth.post(\"/auth/logout\", {}).then(({ data }) => data);\n    // return this.auth.post(\"/auth/logout\", {}).then((response) => response.data);\n  }\n\n  me() {\n    return this.auth.get(\"/auth/me\").then(({ data }) => data);\n    // return this.auth.get(\"/auth/me\").then((response) => response.data);\n  }\n}\n\nconst authService = new Auth();\n// `authService` is the object with the above axios request methods\n\nexport default authService;\n","//\tlib/Auth.js\n\nimport React, { Component } from \"react\";\nimport authService from \"./auth-service\"; // IMPORT functions for axios requests to API\nconst { Consumer, Provider } = React.createContext();\n\n// HOC to create a Consumer\nconst withAuth = WrappedComponent => {\n  return class extends Component {\n    render() {\n      return (\n        <Consumer>\n          {({ login, signup, logout, user, isLoggedIn }) => {\n            return (\n              <WrappedComponent\n                user={user}\n                isLoggedIn={isLoggedIn}\n                login={login}\n                signup={signup}\n                logout={logout}\n                {...this.props}\n              />\n            );\n          }}\n        </Consumer>\n      );\n    }\n  };\n};\n\n/* \n// HOC - function component example of the same functionality\nfunction withAuthFunc(WrappedComponent) {\n  return function(props) {\n    // props will belong to the WrappedComponent\n    return (\n      <Consumer>{value => <WrappedComponent {...value} {...props} />}</Consumer>\n    );\n  };\n}\n */\n\n// Provider\nclass AuthProvider extends React.Component {\n  state = {\n    // contains data about authentication\n    isLoggedIn: false,\n    user: null,\n    isLoading: true\n  };\n\n  componentDidMount() {\n    authService\n      .me() // returns info only if the user has a cookie\n      .then(user =>\n        this.setState({ isLoggedIn: true, user: user, isLoading: false })\n      )\n      .catch(err =>\n        this.setState({ isLoggedIn: false, user: null, isLoading: false })\n      );\n  }\n\n  signup = (username, password, platforms, consoles) => {\n    authService\n      .signup({ username, password, platforms, consoles })\n      .then(user => this.setState({ isLoggedIn: true, user }))\n      .catch(err => console.log(err));\n  };\n\n  login = (username, password) => {\n    authService\n      .login({ username, password })\n      .then(user => this.setState({ isLoggedIn: true, user }))\n      .catch(err => console.log(err));\n  };\n\n  logout = () => {\n    authService\n      .logout()\n      .then(() => this.setState({ isLoggedIn: false, user: null }))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { isLoading, isLoggedIn, user } = this.state;\n    const { login, logout, signup } = this;\n\n    return (\n      <Provider value={{ isLoading, isLoggedIn, user, login, logout, signup }}>\n        {this.props.children}\n      </Provider>\n    );\n    /*\n      <Provider> `value={}` data will be available to all <Consumer> components \n    */\n  }\n}\n\nexport { withAuth, AuthProvider }; // to export multiple things we dont use default.\n\n//      Consumer ,  Provider\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withAuth } from \"./../lib/Auth\";\n\nclass Navbar extends Component {\n  render() {\n    const { user, logout, isLoggedIn } = this.props;\n\n    return (\n      <nav class=\"navbar navbar-light bg-light\">\n        <Link to={\"/\"} class=\"btn btn-outline-info\" type=\"button\">\n        <i class=\"fas fa-home\"></i>\n        </Link>\n        {isLoggedIn ? (\n          <>\n            {/* <p id=\"home-btn\">Welcome {user.username} </p> */}\n            <Link\n             class=\"btn btn-outline-info\" type=\"button\"\n              to={\"/backlog\"}\n            >\n              <i class=\"fas fa-list\"></i>\n            </Link>\n            <Link\n              class=\"btn btn-outline-info\" type=\"button\"\n              to={\"/done\"}\n            >\n              <i class=\"fas fa-tasks\"></i>\n            </Link>\n            <i class=\"fas fa-sign-out-alt btn btn-outline-danger\" type=\"button\" onClick={logout}></i>\n          </>\n        ) : (\n          <>\n            <Link to=\"/login\" class=\"btn btn-outline-success\" type=\"button\">\n              {\" \"}\n              <i class=\"fas fa-sign-in-alt\"></i>\n            </Link>\n            <br />\n            <Link to=\"/signup\" class=\"btn btn-outline-info\" type=\"button\">\n              {\" \"}\n              <i class=\"fas fa-user-plus\"></i>\n            </Link>\n          </>\n        )}\n      </nav>\n    );\n  }\n}\n\nexport default withAuth(Navbar);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Home() {\n  return (\n    <div>\n      <img src=\"images/logo2.png\" alt=\"logo2\" width=\"100%\"/> \n    </div>\n  );\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withAuth } from \"./../lib/Auth\";\n\nclass Signup extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    email: \"\", // not used atm\n    allPlatforms: [\n      \"Netflix\",\n      \"Amazon Prime\",\n      \"Disney+\",\n      \"HBO Now\",\n      \"Plex\",\n      \"Other\"\n    ],\n    selectedPlatforms: [],\n    allConsoles: [\"Xbox\", \"Playstation\", \"Switch\", \"PC\", \"Other\"],\n    selectedConsoles: []\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { username, password, selectedPlatforms, selectedConsoles } = this.state;\n\n    this.props.signup(username, password, selectedPlatforms, selectedConsoles);\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  togglePlatform = event => {\n    event.preventDefault();\n\n    const { name, id } = event.target;\n    let newPlatforms = this.state.selectedPlatforms;\n    let newConsoles = this.state.selectedConsoles;\n\n    if (id === \"platforms\") {\n      if (newPlatforms.includes(name)) {\n        newPlatforms.splice(newPlatforms.indexOf(name), 1);\n      } else {\n        newPlatforms.push(name);\n      }\n      this.setState({ selectedPlatforms: newPlatforms });\n    } else if (id === \"consoles\") {\n      if (newConsoles.includes(name)) {\n        newConsoles.splice(newConsoles.indexOf(name), 1);\n      } else {\n        newConsoles.push(name);\n      }\n      this.setState({ selectedConsoles: newConsoles });\n    }\n  };\n\n  render() {\n    const {\n      username,\n      password,\n      allPlatforms,\n      selectedPlatforms,\n      allConsoles,\n      selectedConsoles\n    } = this.state;\n    return (\n      <div>\n        <h1>Sign Up</h1>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <div class=\"form-group\">\n            <label>Username:</label>\n            <input\n              class=\"form-control\"\n              type=\"text\"\n              name=\"username\"\n              value={username}\n              onChange={this.handleChange}\n              placeholder=\"Your name here\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label>Password:</label>\n            <input\n              class=\"form-control\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n              placeholder=\"And your password here\"\n            />\n          </div>\n\n          <p>Select your owned subscriptions and consoles below!</p>\n\n          {/* Here you can observe magic happening by mapping on arrays and hard-coding style based on .includes */}\n\n          <div class=\"platform-container\">\n            <div class=\"btn-group-vertical platforms-list\">\n              {allPlatforms.map(eachPlatform => {\n                return (\n                  <button\n                    id=\"platforms\"\n                    style={\n                      selectedPlatforms.includes(eachPlatform)\n                        ? { background: \"green\" }\n                        : null\n                    }\n                    class=\"btn btn-secondary\"\n                    onClick={this.togglePlatform}\n                    name={eachPlatform}\n                  >\n                    {eachPlatform}\n                  </button>\n                );\n              })}\n            </div>\n\n            <div class=\"btn-group-vertical platforms-list\">\n              {allConsoles.map(eachConsole => {\n                return (\n                  <button\n                    id=\"consoles\"\n                    style={\n                      selectedConsoles.includes(eachConsole)\n                        ? { background: \"green\" }\n                        : null\n                    }\n                    class=\"btn btn-secondary\"\n                    onClick={this.togglePlatform}\n                    name={eachConsole}\n                  >\n                    {eachConsole}\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n\n          <p>Don't worry, you will be able to edit this later</p>\n\n          {/* <label>Selected Platforms: </label>\n            <ul>\n              {this.state.selectedPlatforms.map(eachPlatform => {\n                return <li>{eachPlatform}</li>;\n              })}\n            </ul> */}\n\n          <div class=\"sign-btn\">\n            <input class=\"btn btn-primary\" type=\"submit\" value=\"Signup\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Signup);\n","import React, { Component } from \"react\";\nimport { withAuth } from \"./../lib/Auth\";\n\nclass Login extends Component {\n  state = { username: \"\", password: \"\" };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { username, password } = this.state;\n\n    this.props.login(username, password);\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { username, password } = this.state;\n\n    return (\n      <div>\n        <h1>Login</h1>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <div class=\"form-group\">\n            <label>Username:</label>\n            <input\n              class=\"form-control\"\n              type=\"text\"\n              name=\"username\"\n              value={username}\n              onChange={this.handleChange}\n              placeholder=\"Your name here\"\n            />\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"exampleInputPassword1\">Password:</label>\n            <input\n              class=\"form-control\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n              placeholder=\"And your password here\"\n            />\n          </div>\n<div class=\"sign-btn\">\n\n          <input class=\"btn btn-primary\" type=\"submit\" value=\"Login\" />\n</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Login);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport class BacklogFilmInfo extends Component {\n  state = {\n    selectedPlatform: \"\",\n    toogleInfo: false\n  };\n\n  handleChange = event => {\n    const { id, value } = event.target;\n    this.props.updatePlatformProp(id, value);\n  };\n\n  showAdditionalInfo = () => {\n    let newToggleInfo;\n    this.state.toogleInfo === false\n      ? (newToggleInfo = true)\n      : (newToggleInfo = false);\n    this.setState({ toogleInfo: newToggleInfo });\n  };\n\n  render() {\n    // DECOINSTRUCT ALL PROPS HERE\n    return (\n      <div>\n        <button\n          class=\"list-group-item list-group-item-action list-items\"\n          onClick={this.showAdditionalInfo}\n        >\n          {/* Magnificent ternary to add icon depending on media type */}\n          {this.props.eachMediaProp.type === \"Series\" ? (\n            <i class=\"fas fa-tv\"></i>\n          ) : this.props.eachMediaProp.type === \"Film\" ? (\n            <i class=\"fas fa-film\"></i>\n          ) : this.props.eachMediaProp.type === \"Game\" ? (\n            <i class=\"fas fa-gamepad\"></i>\n          ) : null}\n          <b> {this.props.eachMediaProp.title}</b> in{\" \"}\n          <b>{this.props.eachMediaProp.platform}</b>\n        </button>\n        <br />\n\n        {/* TERNARY OPERATOR SHOULD SHOW THE DIV AS AN ADITIONAL COMPONENT */}\n        {this.state.toogleInfo ? (\n          <div>\n            <div class=\"card mb-3 cardReact\">\n              <div class=\"no-gutters infoblocks\">\n                <div class=\"col-md-4\">\n                  <img\n                    src={this.props.eachMediaProp.image}\n                    class=\"card-img\"\n                    alt=\"...\"\n                  />\n                </div>\n                <div class=\"col-md-8\">\n                  <div class=\"card-body\">\n                    <p class=\"card-text\">\n                      <small class=\"text-muted\">\n                        <b>Release Date:</b>{\" \"}\n                        {this.props.eachMediaProp.releaseDate}\n                      </small>{\" \"}\n                      <br />\n                      <small class=\"text-muted\">\n                        <b>Description:</b>{\" \"}\n                        {this.props.eachMediaProp.description}\n                      </small>\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <form class=\"form-group\">\n              <label>Click below to update platform!</label>\n\n              <select\n                class=\"form-control\"\n                id={this.props.eachMediaProp._id}\n                onChange={this.handleChange}\n                name=\"platforms\"\n                value={this.props.eachMediaProp.platform}\n              >\n                {/* To show subscriptions/platforms to choose from based only on user profile owned subscriptions/platforms */}\n                {this.props.userPlatformsProp.map(eachPlatform => {\n                  return <option value={eachPlatform}>{eachPlatform}</option>;\n                })}\n              </select>\n              </form>\n\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-danger info-btns\"\n                onClick={() =>\n                  this.props.deleteMediaProp(this.props.eachMediaProp._id)\n                }\n              >\n                delete\n              </button>\n\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-success info-btns\"\n                onClick={() =>\n                  this.props.toggleDoneProp(\n                    this.props.eachMediaProp._id,\n                    this.props.eachMediaProp.done\n                  )\n                }\n              >\n                done\n              </button>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default BacklogFilmInfo;\n","import React, { Component } from \"react\";\nimport { withAuth } from \"../lib/Auth\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport BacklogFilmInfo from \"../components/BacklogFilmInfo\";\n\nclass Backlog extends Component {\n  state = {\n    media: [],\n    filteredMedia: [], // media state mutated through filter by media type\n    randomClick: false,\n    previousFilteredMedia: [], // previous state for use in random button toggle off\n    isLoading: true,\n    filteredType: \"Film\", // set as film on the first load\n    userPlatforms: []\n  };\n\n  // to get updated data from backend\n  getAllBacklog = () => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/backlog`, \n      \n      {\n        withCredentials: true\n      })\n      .then(apiResponse => {\n        let firstFilteredArray = apiResponse.data.filter(\n          e => e.type === this.state.filteredType\n        ); // To show only films on first backlog load\n        this.setState({\n          media: apiResponse.data,\n          filteredMedia: firstFilteredArray,\n          previousFilteredMedia: firstFilteredArray,\n          randomClick: false,\n          isLoading: false\n        });\n      });\n  };\n\n  // to filter backlog list by media type (Films, Series and Games)\n  filterMedia = event => {\n    let initialState = [...this.state.media];\n    let newState = initialState.filter(e => e.type === event.target.name);\n    this.setState({\n      filteredMedia: newState,\n      previousFilteredMedia: newState,\n      randomClick: false,\n      filteredType: event.target.name\n    });\n  };\n\n  // to select a random media from list\n  randomMedia = () => {\n    if (this.state.randomClick === false) {\n      let previousFilteredState = this.state.filteredMedia;\n      let randomNumber = Math.floor(\n        Math.random() * previousFilteredState.length\n      );\n      let newState = previousFilteredState.filter(\n        element => element._id === previousFilteredState[randomNumber]._id\n      );\n      this.setState({ filteredMedia: newState, randomClick: true });\n    } else if (this.state.randomClick === true) {\n      this.setState({\n        filteredMedia: this.state.previousFilteredMedia,\n        randomClick: false\n      });\n    }\n  };\n\n  // to update the platform via dropdown onChange\n  updatePlatform = (id, value) => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    axios\n      .put(\n        `${process.env.REACT_APP_API_URL}/api/media/${id}`,\n        {\n          platform: value\n        },\n        {\n          withCredentials: true\n        }\n      )\n      .then(() => this.getAllBacklog())\n      .catch(err => console.log(err));\n  };\n\n  // to delete element from database and refresh\n  deleteMedia = mediaId => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/media/${mediaId}`, {\n        withCredentials: true\n      })\n      .then(() => this.getAllBacklog())\n      .catch(err => console.log(err));\n  };\n\n  componentDidMount() {\n    //  fetch the data from API befor initial render\n    this.getAllBacklog();\n\n    // THIS SHOULD GO TO BACKEND SERVICES USED ALSO ON PROFILE AND ADDFILM\n    axios\n    .get(\n      `${process.env.REACT_APP_API_URL}/profile/${this.props.user._id}`,\n\n      {\n        withCredentials: true\n      }\n    )\n    .then(apiResponse => {\n      this.setState({\n        userPlatforms: apiResponse.data.platforms\n        // MISSING CONSOLES\n      });\n    });\n\n  }\n\n  toggleDone = (id, isItDone) => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    let done;\n    isItDone ? (done = false) : (done = true);\n    axios\n      .put(\n        `${process.env.REACT_APP_API_URL}/api/media/${id}`,\n        {\n          done\n        },\n        {\n          withCredentials: true\n        }\n      )\n      .then(() => {\n        this.getAllBacklog();\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { filteredMedia, isLoading, userPlatforms } = this.state;\n\n    return (\n      <div>\n        <nav class=\"navbar navbar-light bg-light\">\n\n          <button type=\"button\" class=\"btn btn-info\" onClick={this.filterMedia} name=\"Series\">\n          <i class=\"fas fa-tv\"></i> Series\n          </button>\n\n          <button type=\"button\" class=\"btn btn-info\" onClick={this.filterMedia} name=\"Film\">\n          <i class=\"fas fa-film\"></i> Films\n          </button>\n\n          <button type=\"button\" class=\"btn btn-info\" onClick={this.filterMedia} name=\"Game\">\n          <i class=\"fas fa-gamepad\"></i> Games\n          </button>\n\n        </nav>\n        <h1>Backlog</h1>\n        <div class=\"list-group\">\n          {!isLoading\n            ? filteredMedia.map(eachMedia => {\n                return (\n                    <BacklogFilmInfo\n                      eachMediaProp={eachMedia}\n                      userPlatformsProp={userPlatforms}\n                      updatePlatformProp={this.updatePlatform}\n                      deleteMediaProp={this.deleteMedia}\n                      toggleDoneProp={this.toggleDone}\n                    />\n                );\n              })\n            : null}\n        </div>\n\n        <nav class=\"navbar navbar-light bg-light footerbar\">\n        <Link class=\"btn btn-outline-info\" type=\"button\" to={\"/add/films\"}>\n        <i class=\"fas fa-plus\"></i>\n        </Link>\n        <button class=\"btn btn-info btn-circle btn-xl\">\n\n        <i onClick={this.randomMedia} class=\"fas fa-random icon\"></i>\n        </button>\n\n        <Link class=\"btn btn-outline-info\" type=\"button\" to={\"/profile\"}>\n        <i class=\"fas fa-user\"></i>\n        </Link>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Backlog);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport class DoneMediaInfo extends Component {\n  state = {\n    selectedPlatform: \"\",\n    toogleInfo: false\n  };\n\n  handleChange = event => {\n    const { id, value } = event.target;\n    this.props.updatePlatformProp(id, value);\n  };\n\n  showAdditionalInfo = () => {\n    console.log(\"showInfo working\");\n    let newToggleInfo;\n    this.state.toogleInfo === false\n      ? (newToggleInfo = true)\n      : (newToggleInfo = false);\n    this.setState({ toogleInfo: newToggleInfo });\n  };\n\n  render() {\n    console.log()\n    // DECOINSTRUCT ALL PROPS HERE\n    return (\n      <div>\n        <button onClick={this.showAdditionalInfo}>\n          <b>{this.props.eachMediaProp.title}</b> in{\" \"}\n          <b>{this.props.eachMediaProp.platform}</b>\n        </button>\n        <br />\n\n        {/* TERNARY OPERATOR SHOULD SHOW THE DIV AS AN ADITIONAL COMPONENT */}\n        {this.state.toogleInfo ? (\n          <div>\n            <div>\n              <img src={this.props.eachMediaProp.image} alt=\"poster\"></img>\n              <div>\n                <p>Release Date: {this.props.eachMediaProp.releaseDate}</p>\n                <p>ranking: {this.props.eachMediaProp.ranking}</p>\n                <p>Description: {this.props.eachMediaProp.description}</p>\n              </div>\n            </div>\n\n            <p>Platform viewed: {this.props.eachMediaProp.platform}</p>\n            <p>Finished Date: {this.props.eachMediaProp.updated_at}</p>\n            \n            <button type=\"button\" class=\"btn btn-outline-danger\"\n              onClick={() =>\n                this.props.deleteMediaProp(this.props.eachMediaProp._id)\n              }\n            >\n              delete\n            </button>\n\n\n            <button type=\"button\" class=\"btn btn-outline-warning\"\n              onClick={() =>\n                this.props.toggleDoneProp(\n                  this.props.eachMediaProp._id,\n                  this.props.eachMediaProp.done\n                )\n              }\n            >\n              undo\n            </button>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default DoneMediaInfo;\n","import React, { Component } from \"react\";\nimport { withAuth } from \"../lib/Auth\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport DoneMediaInfo from \"../components/DoneMediaInfo\";\n\nclass DoneList extends Component {\n  state = {\n    media: [],\n    filteredMedia: [], // media state mutated through filter by media type\n    isLoading: true,\n    filteredType: \"Film\" // set as film on the first load\n  };\n\n  // to get updated data from backend\n  getAllBacklog = () => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/done`, {\n        withCredentials: true\n      })\n      .then(apiResponse => {\n        let firstFilteredArray = apiResponse.data.filter(\n          e => e.type === this.state.filteredType\n        ); // To show only films on first backlog load\n        this.setState({\n          media: apiResponse.data,\n          filteredMedia: firstFilteredArray,\n          isLoading: false\n        });\n      });\n  };\n\n  // to filter backlog list by media type (Films, Series and Games)\n  filterMedia = event => {\n    let initialState = [...this.state.media];\n    let newState = initialState.filter(e => e.type === event.target.name);\n    this.setState({\n      filteredMedia: newState,\n      previousFilteredMedia: newState,\n      randomClick: false,\n      filteredType: event.target.name\n    });\n  };\n\n  // to delete element from database and refresh\n  deleteMedia = mediaId => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/media/${mediaId}`, {\n        withCredentials: true\n      })\n      .then(() => this.getAllBacklog())\n      .catch(err => console.log(err));\n  };\n\n  componentDidMount() {\n    //  fetch the data from API befor initial render\n    this.getAllBacklog();\n  }\n\n  toggleDone = (id, isItDone) => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    let done;\n    isItDone ? (done = false) : (done = true);\n    axios\n      .put(\n        `${process.env.REACT_APP_API_URL}/api/media/${id}`,\n        {\n          done\n        },\n        {\n          withCredentials: true\n        }\n      )\n      .then(() => {\n        this.getAllBacklog();\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { filteredMedia, isLoading } = this.state;\n\n    return (\n      <div>\n        <div>\n          <button onClick={this.filterMedia} name=\"Series\">\n            Series\n          </button>\n          <button onClick={this.filterMedia} name=\"Film\">\n            Films\n          </button>\n        </div>\n        <h1>Done List</h1>\n        <ul>\n          {!isLoading\n            ? filteredMedia.map(eachMedia => {\n                return (\n                  <li>\n                    <DoneMediaInfo\n                      eachMediaProp={eachMedia}\n                      userProp={this.props.user}\n                      deleteMediaProp={this.deleteMedia}\n                      toggleDoneProp={this.toggleDone}\n                    />\n                  </li>\n                );\n              })\n            : null}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(DoneList);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport class AddFilmInfo extends Component {\n  state = {\n    selectedResult: this.props.selectedResultProp,\n    selectedPlatform: \"\",\n    selectedMediaType: this.props.searchTypeProp,\n    availablePlatforms: this.props.userPlatformsProp \n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n    console.log(value);\n  };\n\n  addResult = (event, media, ImageUrl) => {\n    event.preventDefault();\n    if (this.state.selectedMediaType === \"Film\") {\n      // API FOR FILMS\n      const { title, vote_average, overview, release_date } = media;\n      // THIS SHOULD GO TO BACKEND API SERVICES\n      axios\n        .post(\n          `${process.env.REACT_APP_API_URL}/api/add`,\n          {\n            title, // Different name for series\n            type: this.state.selectedMediaType,\n            done: false,\n            platform: this.state.selectedPlatform,\n            image: ImageUrl,\n            ranking: vote_average,\n            description: overview,\n            releaseDate: release_date // Different name for series\n          },\n          { withCredentials: true }\n        )\n        .then(data => console.log(\"Film created:\", data))\n        .catch(err => console.log(err));\n    } else if (this.state.selectedMediaType === \"Series\") {\n      // API FOR SERIES\n      const { name, vote_average, overview, first_air_date } = media;\n      // THIS SHOULD GO TO BACKEND API SERVICES\n      axios\n        .post(\n          `${process.env.REACT_APP_API_URL}/api/add`,\n          {\n            title: name,\n            type: this.state.selectedMediaType,\n            done: false,\n            platform: this.state.selectedPlatform,\n            image: ImageUrl,\n            ranking: vote_average,\n            description: overview,\n            releaseDate: first_air_date\n          },\n          { withCredentials: true }\n        )\n        .then(data => console.log(\"Film created:\", data))\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    const { selectedResult, selectedPlatform, availablePlatforms } = this.state;\n    const ImageUrl =\n      \"https://image.tmdb.org/t/p/w185_and_h278_bestv2/\" +\n      selectedResult.poster_path;\n    return (\n      <div class=\"col-3\">\n        {selectedResult.title}\n        <img src={ImageUrl} alt=\"poster\"></img>\n\n        <select\n          id={selectedResult.title}\n          name=\"selectedPlatform\"\n          value={selectedPlatform}\n          onChange={this.handleChange}\n        >\n          {/* below is a placeholder for dropdown */}\n          <option value=\"\" disabled selected>Select your option</option>\n          {/* To show subscriptions/platforms to choose from based only on user profile owned subscriptions/platforms */}\n          {availablePlatforms.map(eachPlatform => {\n            return <option value={eachPlatform}>{eachPlatform}</option>;\n          })}\n        </select>\n\n        <button class=\"btn btn-info\"\n          onClick={event => this.addResult(event, selectedResult, ImageUrl)}\n        >\n          Add to Backlog\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default AddFilmInfo;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport class AddGameInfo extends Component {\n  state = {\n    selectedResult: this.props.selectedResultProp,\n    selectedConsole: \"\",\n    selectedMediaType: this.props.searchTypeProp,\n    availableConsoles: this.props.userConsolesProp\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  addResult = (event, media, ImageUrl) => {\n    event.preventDefault();\n\n    // THIS SHOULD GO TO EXTERNAL API SERVICES\n\n    // switch case to fix platform field format because this API is SspECiaL ¬¬\n    let platformCorrected = \"\";\n\n    switch (this.state.selectedResult.platform) {\n      case \"Switch\":\n        platformCorrected = \"switch\";\n        break;\n      case \"WII\":\n        platformCorrected = \"wii\";\n        break;\n      case \"WIIU\":\n        platformCorrected = \"wii-u\";\n        break;\n      case \"GC\":\n        platformCorrected = \"gamecube\";\n        break;\n      case \"N64\":\n        platformCorrected = \"nintendo-64\";\n        break;\n      case \"3DS\":\n        platformCorrected = \"3ds\";\n        break;\n      case \"DS\":\n        platformCorrected = \"ds\";\n        break;\n      case \"PS4\":\n        platformCorrected = \"playstation-4\";\n        break;\n      case \"PS3\":\n        platformCorrected = \"playstation-3\";\n        break;\n      case \"PS2\":\n        platformCorrected = \"playstation-2\";\n        break;\n      case \"PS\":\n        platformCorrected = \"playstation\";\n        break;\n      case \"PSP\":\n        platformCorrected = \"psp\";\n        break;\n      case \"VITA\":\n        platformCorrected = \"playstation-vita\";\n        break;\n      case \"PC\":\n        platformCorrected = \"pc\";\n        break;\n      case \"XONE\":\n        platformCorrected = \"xbox-one\";\n        break;\n      case \"Xbox 360\":\n        platformCorrected = \"xbox-360\";\n        break;\n      case \"Xbox\":\n        platformCorrected = \"xbox\";\n        break;\n    }\n\n    axios({\n      method: \"GET\",\n      url: `https://chicken-coop.p.rapidapi.com/games/${this.state.selectedResult.title}`,\n      headers: {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\": \"chicken-coop.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"ebde97877cmsh57d04785db64b6cp1c30f0jsn986c5e407a9c\"\n      },\n      params: {\n        platform: `${platformCorrected}`\n      }\n    })\n      .then(data => {\n        // THIS SHOULD GO TO BACKEND API SERVICES\n        const {\n          title,\n          image,\n          score,\n          description,\n          releasedDate\n        } = data.data.result;\n        axios\n          .post(\n            `${process.env.REACT_APP_API_URL}/api/add`,\n            {\n              title,\n              type: this.state.selectedMediaType,\n              // done: false,\n              platform: this.state.selectedConsole\n              // image,\n              // ranking: score,\n              // description\n              // releaseDate: releasedDate\n            },\n            { withCredentials: true }\n          )\n          .then(data => console.log(\"Game created:\", data))\n          .catch(err => console.log(err));\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { selectedResult, selectedConsole, availableConsoles } = this.state;\n    return (\n      <div class=\"col-3\">\n        {selectedResult.title}\n\n        <select\n          id={selectedResult.title}\n          name=\"selectedConsole\"\n          value={selectedConsole}\n          onChange={this.handleChange}\n        >\n          {/* below is a placeholder for dropdown */}\n          <option value=\"\" disabled selected>\n            Select your option\n          </option>\n          {/* To show subscriptions/platforms to choose from based only on user profile owned subscriptions/platforms */}\n          {availableConsoles.map(eachConsole => {\n            return <option value={eachConsole}>{eachConsole}</option>;\n          })}\n        </select>\n\n        <button\n          class=\"btn btn-info\"\n          onClick={event => this.addResult(event, selectedResult)}\n        >\n          Add to Backlog\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default AddGameInfo;\n","import React, { Component } from \"react\";\nimport { withAuth } from \"../lib/Auth\";\nimport axios from \"axios\";\nimport AddFilmInfo from \"../components/AddFilmInfo\";\nimport AddGameInfo from \"../components/AddGameInfo\";\nimport { Link } from \"react-router-dom\";\n\n// import { HowLongToBeatService, HowLongToBeatEntry } from \"howlongtobeat\";\n// let hltbService = new HowLongToBeatService();\n\nexport class AddFilms extends Component {\n  state = {\n    searchQuery: \"\",\n    searchResults: [],\n    searchType: \"\", // to use different api url\n    userPlatforms: [],\n    userConsoles: []\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmitForGames = event => {\n    event.preventDefault();\n    const { searchQuery } = this.state;\n\n    // hltbService.search(\"Nioh\").then(result => console.log(result));\n\n    axios({\n      method: \"GET\",\n      url: \"https://chicken-coop.p.rapidapi.com/games\",\n      headers: {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\": \"chicken-coop.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"ebde97877cmsh57d04785db64b6cp1c30f0jsn986c5e407a9c\" // NEED TO CHANGE THIS TO .ENV API KEY\n      },\n      params: {\n        title: `${searchQuery}`\n      }\n    })\n      .then(data => {\n        console.log(data.data.result);\n        this.setState({ searchResults: data.data.result });\n      })\n      .catch(err => console.log(err));\n\n    this.setState({ searchResults: [] });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { searchQuery, searchType } = this.state;\n\n    // variable to re-use films/series api axios\n    let apiMediaType = \"\";\n    searchType === \"Film\" ? (apiMediaType = \"movie\") : (apiMediaType = \"tv\");\n    axios({\n      method: \"GET\",\n      url: `https://api.themoviedb.org/3/search/${apiMediaType}?api_key=${process.env.REACT_APP_CLIENT_KEY}&query=${searchQuery}&page=1`\n    })\n      .then(data => {\n        // to remove data without poster images because what are those anyway\n        console.log(data);\n        const newData = data.data.results.filter(\n          e => e.poster_path !== undefined\n        );\n        this.setState({ searchResults: newData });\n      })\n      .catch(err => console.log(err));\n\n    this.setState({ searchResults: [] });\n  };\n\n  selectMediaType = event => {\n    const { name } = event.target;\n    this.setState({ searchResults: [], searchType: name, searchQuery: \"\" });\n  };\n\n  componentDidMount = () => {\n    // THIS SHOULD GO TO BACKEND SERVICES USED ALSO ON PROFILE AND ADDFILM\n    axios\n      .get(\n        `${process.env.REACT_APP_API_URL}/profile/${this.props.user._id}`,\n\n        {\n          withCredentials: true\n        }\n      )\n      .then(apiResponse => {\n        this.setState({\n          userPlatforms: apiResponse.data.platforms,\n          userConsoles: apiResponse.data.consoles\n        });\n      });\n  };\n\n  render() {\n    const {\n      searchQuery,\n      searchResults,\n      searchType,\n      userPlatforms,\n      userConsoles\n    } = this.state;\n\n    return (\n      <div>\n        <nav class=\"navbar navbar-light bg-light\">\n          <button\n            type=\"button\"\n            class=\"btn btn-info\"\n            onClick={this.selectMediaType}\n            name=\"Series\"\n          >\n            <i class=\"fas fa-tv\"></i> Series\n          </button>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-info\"\n            onClick={this.selectMediaType}\n            name=\"Film\"\n          >\n            <i class=\"fas fa-film\"></i> Films\n          </button>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-info\"\n            onClick={this.selectMediaType}\n            name=\"Game\"\n          >\n            <i class=\"fas fa-gamepad\"></i> Games\n          </button>\n        </nav>\n\n        {searchType === \"\" ? (\n          <h3>Select a media type!</h3>\n        ) : (\n          <form onSubmit={searchType === \"Game\" ? this.handleFormSubmitForGames : this.handleFormSubmit}>\n            <input\n              type=\"text\"\n              name=\"searchQuery\"\n              value={searchQuery}\n              onChange={this.handleChange}\n              placeholder={searchType}\n            />\n            <input type=\"submit\" value=\"Search\" />\n          </form>\n        )}\n\n        <div>\n          <div class=\"column flex-column flex-nowrap\">\n            {/* ternary on map to show different components based on if it is film/series or games */}\n\n            {searchType === \"Game\"\n              ? searchResults.map(selectedResult => {\n                  return (\n                    <AddGameInfo\n                      selectedResultProp={selectedResult}\n                      searchTypeProp={searchType}\n                      userConsolesProp={userConsoles}\n                    />\n                  );\n                })\n              : searchResults.map(selectedResult => {\n                  return (\n                    <AddFilmInfo\n                      selectedResultProp={selectedResult}\n                      searchTypeProp={searchType}\n                      userPlatformsProp={userPlatforms}\n                    />\n                  );\n                })}\n          </div>\n        </div>\n\n        <Link to={\"/backlog\"}>\n          <h4>Back</h4>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(AddFilms);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withAuth } from \"./../lib/Auth\";\nimport axios from \"axios\";\n\nclass Profile extends Component {\n  state = {\n    username: \"\",\n    password: \"\", // not used here atm\n    email: \"\", // not used atm\n    allPlatforms: [\n      \"Netflix\",\n      \"Amazon Prime\",\n      \"Disney+\",\n      \"HBO Now\",\n      \"Plex\",\n      \"Other\"\n    ],\n    selectedPlatforms: [],\n    allConsoles: [\"Xbox\", \"Playstation\", \"Switch\", \"PC\", \"Other\"],\n    selectedConsoles: []\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { selectedPlatforms, selectedConsoles } = this.state;\n\n    // use put route here\n\n    axios\n      .put(\n        `${process.env.REACT_APP_API_URL}/profile/${this.props.user._id}`,\n        {\n          platforms: selectedPlatforms,\n          consoles: selectedConsoles\n        },\n        {\n          withCredentials: true\n        }\n      )\n      .then(() => console.log(\"User platforms updated\"))\n      .catch(err => console.log(err));\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  togglePlatform = event => {\n    event.preventDefault();\n\n    const { name, id } = event.target;\n    let newPlatforms = this.state.selectedPlatforms;\n    let newConsoles = this.state.selectedConsoles;\n\n    if (id === \"platforms\") {\n      if (newPlatforms.includes(name)) {\n        newPlatforms.splice(newPlatforms.indexOf(name), 1);\n      } else {\n        newPlatforms.push(name);\n      }\n      this.setState({ selectedPlatforms: newPlatforms });\n    } else if (id === \"consoles\") {\n      if (newConsoles.includes(name)) {\n        newConsoles.splice(newConsoles.indexOf(name), 1);\n      } else {\n        newConsoles.push(name);\n      }\n      this.setState({ selectedConsoles: newConsoles });\n    }\n  };\n\n  componentDidMount = () => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    axios\n      .get(\n        `${process.env.REACT_APP_API_URL}/profile/${this.props.user._id}`,\n\n        {\n          withCredentials: true\n        }\n      )\n      .then(apiResponse => {\n        this.setState({\n          username: apiResponse.data.username,\n          selectedPlatforms: apiResponse.data.platforms,\n          selectedConsoles: apiResponse.data.consoles\n        });\n      });\n  };\n\n  render() {\n    const {\n      username,\n      allPlatforms,\n      selectedPlatforms,\n      allConsoles,\n      selectedConsoles\n    } = this.state;\n    return (\n      <div>\n        <h4>Welcome to your profile {username}</h4>\n        <form onSubmit={this.handleFormSubmit}>\n          <p>Update your subscriptions and consoles below!</p>\n\n          {/* Here you can observe magic happening by mapping on arrays and hard-coding style based on .includes */}\n\n          <div class=\"platform-container\">\n            <div class=\"btn-group-vertical platforms-list\">\n              {allPlatforms.map(eachPlatform => {\n                return (\n                  <button\n                    id=\"platforms\"\n                    style={\n                      selectedPlatforms.includes(eachPlatform)\n                        ? { background: \"green\" }\n                        : null\n                    }\n                    class=\"btn btn-secondary\"\n                    onClick={this.togglePlatform}\n                    name={eachPlatform}\n                  >\n                    {eachPlatform}\n                  </button>\n                );\n              })}\n            </div>\n\n            <div class=\"btn-group-vertical platforms-list\">\n              {allConsoles.map(eachConsole => {\n                return (\n                  <button\n                    id=\"consoles\"\n                    style={\n                      selectedConsoles.includes(eachConsole)\n                        ? { background: \"green\" }\n                        : null\n                    }\n                    class=\"btn btn-secondary\"\n                    onClick={this.togglePlatform}\n                    name={eachConsole}\n                  >\n                    {eachConsole}\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n\n          <p>You can edit this anytime you want!</p>\n\n          {/* <label>Selected Platforms: </label>\n            <ul>\n              {this.state.selectedPlatforms.map(eachPlatform => {\n                return <li>{eachPlatform}</li>;\n              })}\n            </ul> */}\n\n          <div class=\"sign-btn\">\n            <input class=\"btn btn-primary\" type=\"submit\" value=\"Update\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Profile);\n","//\tcomponents/AnonRoute.js\n\n// gives you public pages/components\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withAuth } from \"../lib/Auth\";\n\nfunction AnonRoute({ component: Component, isLoggedIn, ...rest }) {\n  return (\n    // <Route\n    //   {...rest}\n    //   render={props =>\n    //     !isLoggedIn ? <Component {...props} /> : <Redirect to=\"/private\" />\n    //   }\n    // />\n    <Route\n      {...rest}\n      render={function(props) {\n        if (isLoggedIn) return <Redirect to=\"/backlog\" />;\n        else if (!isLoggedIn) return <Component {...props} />;\n      }}\n    />\n  );\n}\n\nexport default withAuth(AnonRoute);\n","//\tcomponents/PrivateRoute.js\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withAuth } from \"../lib/Auth\";\n\nfunction PrivateRoute({ component: Component, isLoggedIn, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={function(props) {\n        if (isLoggedIn) return <Component {...props} />;\n        else if (!isLoggedIn) return <Redirect to=\"/login\" />;\n      }}\n    />\n  );\n}\n\nexport default withAuth(PrivateRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Backlog from \"./pages/Backlog\";\nimport DoneList from \"./pages/DoneList\";\nimport AddFilms from \"./pages/AddFilms\";\nimport Profile from \"./pages/Profile\";\n\nimport AnonRoute from \"./components/AnonRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Navbar />\n\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n\n          <AnonRoute exact path=\"/signup\" component={Signup} />\n          <AnonRoute exact path=\"/login\" component={Login} />\n\n          <PrivateRoute exact path=\"/backlog\" component={Backlog} />\n          <PrivateRoute exact path=\"/done\" component={DoneList} />\n          <PrivateRoute exact path=\"/add/films\" component={AddFilms} />\n          <PrivateRoute exact path=\"/profile\" component={Profile} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { AuthProvider } from \"./lib/Auth\";\nimport App from \"./App\";\nrequire('dotenv').config();\n\nReactDOM.render(\n  <Router>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}