{"version":3,"sources":["lib/auth-service.js","lib/Auth.js","components/Navbar.js","pages/Home.js","pages/Signup.js","pages/Login.js","components/BacklogFilmInfo.js","pages/Backlog.js","components/AddFilmInfo.js","pages/AddFilms.js","components/AnonRoute.js","components/PrivateRoute.js","App.js","index.js"],"names":["authService","this","auth","axios","create","baseURL","process","withCredentials","username","password","platforms","post","then","data","get","React","createContext","Consumer","Provider","withAuth","WrappedComponent","login","signup","logout","user","isLoggedIn","props","Component","AuthProvider","state","isLoading","setState","catch","err","console","log","me","value","children","className","to","id","onClick","Home","email","handleFormSubmit","event","preventDefault","handleChange","target","name","togglePlatform","newPlatforms","includes","splice","indexOf","push","onSubmit","type","onChange","BacklogFilmInfo","selectedPlatform","toogleInfo","updatePlatformProp","showAdditionalInfo","newToggleInfo","eachMediaProp","title","platform","deleteMediaProp","_id","userProp","map","eachPlatform","toggleDoneProp","done","media","filteredMedia","randomClick","previousFilteredMedia","filteredType","getAllBacklog","apiResponse","firstFilteredArray","filter","e","filterMedia","newState","randomMedia","previousFilteredState","randomNumber","Math","floor","random","length","element","updatePlatform","put","deleteMedia","mediaId","delete","toggleDone","isItDone","eachMedia","AddFilmInfo","selectedResult","selectedResultProp","selectedMediaType","searchTypeProp","availablePlatforms","addResult","ImageUrl","vote_average","overview","release_date","image","ranking","description","releaseDate","first_air_date","poster_path","src","alt","disabled","selected","searchQuery","searchResults","searchType","apiMediaType","method","url","results","selectMediaType","placeholder","component","rest","render","App","exact","path","Signup","Login","Backlog","AddFilms","require","config","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.de8d69fb.chunk.js","sourcesContent":["import axios from \"axios\";\n\nclass Auth {\n  constructor() {\n    this.auth = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true\n    });\n  }\n\n  signup({ username, password, platforms }) {\n    return this.auth\n      .post(\"/auth/signup\", { username, password, platforms })\n      .then(({ data }) => data);\n    // .then((response) => response.data);\n  }\n\n  login({ username, password }) {\n    return this.auth\n      .post(\"/auth/login\", { username, password })\n      .then(({ data }) => data);\n    // .then((response) => response.data);\n  }\n\n  logout() {\n    return this.auth.post(\"/auth/logout\", {}).then(({ data }) => data);\n    // return this.auth.post(\"/auth/logout\", {}).then((response) => response.data);\n  }\n\n  me() {\n    return this.auth.get(\"/auth/me\").then(({ data }) => data);\n    // return this.auth.get(\"/auth/me\").then((response) => response.data);\n  }\n}\n\nconst authService = new Auth();\n// `authService` is the object with the above axios request methods\n\nexport default authService;\n","//\tlib/Auth.js\n\nimport React, { Component } from \"react\";\nimport authService from \"./auth-service\"; // IMPORT functions for axios requests to API\nconst { Consumer, Provider } = React.createContext();\n\n// HOC to create a Consumer\nconst withAuth = WrappedComponent => {\n  return class extends Component {\n    render() {\n      return (\n        <Consumer>\n          {({ login, signup, logout, user, isLoggedIn }) => {\n            return (\n              <WrappedComponent\n                user={user}\n                isLoggedIn={isLoggedIn}\n                login={login}\n                signup={signup}\n                logout={logout}\n                {...this.props}\n              />\n            );\n          }}\n        </Consumer>\n      );\n    }\n  };\n};\n\n/* \n// HOC - function component example of the same functionality\nfunction withAuthFunc(WrappedComponent) {\n  return function(props) {\n    // props will belong to the WrappedComponent\n    return (\n      <Consumer>{value => <WrappedComponent {...value} {...props} />}</Consumer>\n    );\n  };\n}\n */\n\n// Provider\nclass AuthProvider extends React.Component {\n  state = {\n    // contains data about authentication\n    isLoggedIn: false,\n    user: null,\n    isLoading: true\n  };\n\n  componentDidMount() {\n    authService\n      .me() // returns info only if the user has a cookie\n      .then(user =>\n        this.setState({ isLoggedIn: true, user: user, isLoading: false })\n      )\n      .catch(err =>\n        this.setState({ isLoggedIn: false, user: null, isLoading: false })\n      );\n  }\n\n  signup = (username, password, platforms) => {\n    authService\n      .signup({ username, password, platforms })\n      .then(user => this.setState({ isLoggedIn: true, user }))\n      .catch(err => console.log(err));\n  };\n\n  login = (username, password) => {\n    authService\n      .login({ username, password })\n      .then(user => this.setState({ isLoggedIn: true, user }))\n      .catch(err => console.log(err));\n  };\n\n  logout = () => {\n    authService\n      .logout()\n      .then(() => this.setState({ isLoggedIn: false, user: null }))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { isLoading, isLoggedIn, user } = this.state;\n    const { login, logout, signup } = this;\n\n    return (\n      <Provider value={{ isLoading, isLoggedIn, user, login, logout, signup }}>\n        {this.props.children}\n      </Provider>\n    );\n    /*\n      <Provider> `value={}` data will be available to all <Consumer> components \n    */\n  }\n}\n\nexport { withAuth, AuthProvider }; // to export multiple things we dont use default.\n\n//      Consumer ,  Provider\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withAuth } from \"./../lib/Auth\";\n\nclass Navbar extends Component {\n  render() {\n    const { user, logout, isLoggedIn } = this.props;\n\n    return (\n      <nav className=\"navbar\">\n        <Link to={\"/\"} id=\"home-btn\">\n          <h4>Home</h4>\n        </Link>\n        {isLoggedIn ? (\n          <>\n            <p>username: {user.username}</p>\n            <button onClick={logout}>Logout</button>\n          </>\n        ) : (\n          <>\n            <Link to=\"/login\">\n              {\" \"}\n              <button className=\"navbar-button\">Login</button>{\" \"}\n            </Link>\n            <br />\n            <Link to=\"/signup\">\n              {\" \"}\n              <button className=\"navbar-button\">Sign Up</button>{\" \"}\n            </Link>\n          </>\n        )}\n      </nav>\n    );\n  }\n}\n\nexport default withAuth(Navbar);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Home() {\n  return (\n    <div>\n      <h1>Home Page</h1>\n      <Link to={\"/backlog\"}>\n        <h4>backlog</h4>\n      </Link>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withAuth } from \"./../lib/Auth\";\n\nclass Signup extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    email: \"\",\n    platforms: []\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { username, password, platforms } = this.state;\n\n    this.props.signup(username, password, platforms);\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  togglePlatform = event => {\n    event.preventDefault();\n\n    const { name } = event.target;\n    let newPlatforms = this.state.platforms;\n\n    if (newPlatforms.includes(name)) {\n      newPlatforms.splice(newPlatforms.indexOf(name), 1);\n    } else {\n      newPlatforms.push(name);\n    }\n\n    this.setState({ platforms: newPlatforms });\n    console.log(this.state.platforms);\n  };\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <div>\n        <h1>Sign Up</h1>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={this.handleChange}\n          />\n\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n          />\n          <br/>\n          <button onClick={this.togglePlatform} name=\"Netflix\">Netflix</button>\n          <button onClick={this.togglePlatform} name=\"Amazon Prime\">Amazon Prime</button>\n          <button onClick={this.togglePlatform} name=\"Disney+\">Disney+</button>\n          <button onClick={this.togglePlatform} name=\"HBO Now\">HBO Now</button>\n          <button onClick={this.togglePlatform} name=\"Plex\">Plex</button>\n          <button onClick={this.togglePlatform} name=\"Other\">Other</button>\n\n          <ul>\n            <p>{this.state.platforms}</p>\n          </ul>\n\n          <input type=\"submit\" value=\"Signup\" />\n        </form>\n\n        <p>Already have account?</p>\n        <Link to={\"/login\"}> Login</Link>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Signup);\n","import React, { Component } from \"react\";\nimport { withAuth } from \"./../lib/Auth\";\n\nclass Login extends Component {\n  state = { username: \"\", password: \"\" };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { username, password } = this.state;\n\n    this.props.login(username, password);\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { username, password } = this.state;\n\n    return (\n      <div>\n        <h1>Login</h1>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={this.handleChange}\n          />\n\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n          />\n\n          <input type=\"submit\" value=\"Login\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Login);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport class BacklogFilmInfo extends Component {\n  state = {\n    selectedPlatform: \"\",\n    toogleInfo: false\n  };\n\n  handleChange = event => {\n    const { id, value } = event.target;\n    this.props.updatePlatformProp(id, value);\n  };\n\n  showAdditionalInfo = () => {\n    console.log(\"showInfo working\");\n    let newToggleInfo;\n    this.state.toogleInfo === false\n      ? (newToggleInfo = true)\n      : (newToggleInfo = false);\n    this.setState({ toogleInfo: newToggleInfo });\n  };\n\n  render() {\n    console.log(\"toogleInfo\", this.state.toogleInfo);\n    return (\n      <div>\n        <button onClick={this.showAdditionalInfo}>\n          <b>{this.props.eachMediaProp.title}</b> in{\" \"}\n          <b>{this.props.eachMediaProp.platform}</b>\n        </button>\n        <br />\n\n\n        {/* TERNARY OPERATOR SHOULD SHOW THE DIV AS AN ADITIONAL COMPONENT */}\n        {this.state.toogleInfo ? (\n          <div>\n            <button\n              onClick={() =>\n                this.props.deleteMediaProp(this.props.eachMediaProp._id)\n              }\n            >\n              delete\n            </button>\n            <label>Update Platform</label>\n            <select\n              id={this.props.eachMediaProp._id}\n              onChange={this.handleChange}\n              name=\"platforms\"\n              value={this.props.eachMediaProp.platform}\n            >\n              {/* To show subscriptions/platforms to choose from based only on user profile owned subscriptions/platforms */}\n              {this.props.userProp.platforms.map(eachPlatform => {\n                return <option value={eachPlatform}>{eachPlatform}</option>;\n              })}\n            </select>\n\n            <button\n              onClick={() =>\n                this.props.toggleDoneProp(\n                  this.props.eachMediaProp._id,\n                  this.props.eachMediaProp.done\n                )\n              }\n            >\n              done\n            </button>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default BacklogFilmInfo;\n","import React, { Component } from \"react\";\nimport { withAuth } from \"../lib/Auth\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport BacklogFilmInfo from \"../components/BacklogFilmInfo\";\n\nclass Backlog extends Component {\n  state = {\n    media: [],\n    filteredMedia: [], // media state mutated through filter by media type\n    randomClick: false,\n    previousFilteredMedia: [], // previous state for use in random button toggle off\n    isLoading: true,\n    filteredType: \"Film\" // set as film on the first load\n  };\n\n  // to get updated data from backend\n  getAllBacklog = () => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/backlog`, {\n        withCredentials: true\n      })\n      .then(apiResponse => {\n        let firstFilteredArray = apiResponse.data.filter(\n          e => e.type === this.state.filteredType\n        ); // To show only films on first backlog load\n        this.setState({\n          media: apiResponse.data,\n          filteredMedia: firstFilteredArray,\n          previousFilteredMedia: firstFilteredArray,\n          randomClick: false,\n          isLoading: false\n        });\n      });\n  };\n\n  // to filter backlog list by media type (Films, Series and Games)\n  filterMedia = event => {\n    let initialState = [...this.state.media];\n    let newState = initialState.filter(e => e.type === event.target.name);\n    this.setState({\n      filteredMedia: newState,\n      previousFilteredMedia: newState,\n      randomClick: false,\n      filteredType: event.target.name\n    });\n  };\n\n  // to select a random media from list\n  randomMedia = () => {\n    if (this.state.randomClick === false) {\n      let previousFilteredState = this.state.filteredMedia;\n      let randomNumber = Math.floor(\n        Math.random() * previousFilteredState.length\n      );\n      let newState = previousFilteredState.filter(\n        element => element._id === previousFilteredState[randomNumber]._id\n      );\n      this.setState({ filteredMedia: newState, randomClick: true });\n    } else if (this.state.randomClick === true) {\n      this.setState({\n        filteredMedia: this.state.previousFilteredMedia,\n        randomClick: false\n      });\n    }\n  };\n\n  // to update the platform via dropdown onChange\n  updatePlatform = (id, value) => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    axios\n      .put(\n        `${process.env.REACT_APP_API_URL}/api/media/${id}`,\n        {\n          platform: value\n        },\n        {\n          withCredentials: true\n        }\n      )\n      .then(() => this.getAllBacklog())\n      .catch(err => console.log(err));\n  };\n\n  // to delete element from database and refresh\n  deleteMedia = mediaId => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/media/${mediaId}`, {\n        withCredentials: true\n      })\n      .then(() => this.getAllBacklog())\n      .catch(err => console.log(err));\n  };\n\n  componentDidMount() {\n    //  fetch the data from API befor initial render\n    this.getAllBacklog();\n  }\n\n  toggleDone = (id, isItDone) => {\n    // THIS SHOULD GO TO BACKEND SERVICES\n    let done;\n    isItDone ? (done = false) : (done = true);\n    axios\n      .put(\n        `${process.env.REACT_APP_API_URL}/api/media/${id}`,\n        {\n          done\n        },\n        {\n          withCredentials: true\n        }\n      )\n      .then(() => {\n        this.getAllBacklog();\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { filteredMedia, isLoading } = this.state;\n\n    return (\n      <div>\n        <div>\n          <button onClick={this.filterMedia} name=\"Series\">\n            Series\n          </button>\n          <button onClick={this.filterMedia} name=\"Film\">\n            Films\n          </button>\n        </div>\n        <h1>Backlog</h1>\n        <ul>\n          {!isLoading\n            ? filteredMedia.map(eachMedia => {\n                return (\n                  <li>\n                    \n                    <BacklogFilmInfo\n                      eachMediaProp={eachMedia}\n                      userProp={this.props.user}\n                      updatePlatformProp={this.updatePlatform}\n                      deleteMediaProp={this.deleteMedia}\n                      toggleDoneProp={this.toggleDone}\n                    />\n                  </li>\n                );\n              })\n            : null}\n        </ul>\n        <Link to={\"/add/films\"}>\n          <p>Add</p>\n        </Link>\n        <button onClick={this.randomMedia}>Random</button>\n        <Link to={\"/profile\"}>\n          <p>Profile</p>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Backlog);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport class AddFilmInfo extends Component {\n  state = {\n    selectedResult: this.props.selectedResultProp,\n    selectedPlatform: \"\",\n    selectedMediaType: this.props.searchTypeProp,\n    availablePlatforms: this.props.userProp.platforms // passed from withAuth HOC through Backlog\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n    console.log(value);\n  };\n\n  addResult = (event, media, ImageUrl) => {\n    event.preventDefault();\n    if (this.state.selectedMediaType === \"Film\") {\n      // API FOR FILMS\n      const { title, vote_average, overview, release_date } = media;\n      // THIS SHOULD GO TO BACKEND API SERVICES\n      axios\n        .post(\n          `${process.env.REACT_APP_API_URL}/api/add`,\n          {\n            title, // Different name for series\n            type: this.state.selectedMediaType,\n            done: false,\n            platform: this.state.selectedPlatform,\n            image: ImageUrl,\n            ranking: vote_average,\n            description: overview,\n            releaseDate: release_date // Different name for series\n          },\n          { withCredentials: true }\n        )\n        .then(data => console.log(\"Film created:\", data))\n        .catch(err => console.log(err));\n    } else if (this.state.selectedMediaType === \"Series\") {\n      // API FOR SERIES\n      const { name, vote_average, overview, first_air_date } = media;\n      // THIS SHOULD GO TO BACKEND API SERVICES\n      axios\n        .post(\n          `${process.env.REACT_APP_API_URL}/api/add`,\n          {\n            title: name,\n            type: this.state.selectedMediaType,\n            done: false,\n            platform: this.state.selectedPlatform,\n            image: ImageUrl,\n            ranking: vote_average,\n            description: overview,\n            releaseDate: first_air_date\n          },\n          { withCredentials: true }\n        )\n        .then(data => console.log(\"Film created:\", data))\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    const { selectedResult, selectedPlatform, availablePlatforms } = this.state;\n    const ImageUrl =\n      \"https://image.tmdb.org/t/p/w185_and_h278_bestv2/\" +\n      selectedResult.poster_path;\n    return (\n      <li>\n        {selectedResult.title}\n        <img src={ImageUrl} alt=\"poster\"></img>\n\n        <select\n          id={selectedResult.title}\n          name=\"selectedPlatform\"\n          value={selectedPlatform}\n          onChange={this.handleChange}\n        >\n          {/* below is a placeholder for dropdown */}\n          <option value=\"\" disabled selected>Select your option</option>\n          {/* To show subscriptions/platforms to choose from based only on user profile owned subscriptions/platforms */}\n          {availablePlatforms.map(eachPlatform => {\n            return <option value={eachPlatform}>{eachPlatform}</option>;\n          })}\n        </select>\n\n        <button\n          onClick={event => this.addResult(event, selectedResult, ImageUrl)}\n        >\n          Add to Backlog\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default AddFilmInfo;\n","import React, { Component } from \"react\";\nimport { withAuth } from \"../lib/Auth\";\nimport axios from \"axios\";\nimport AddFilmInfo from \"../components/AddFilmInfo\";\nimport { Link } from \"react-router-dom\";\n\nexport class AddFilms extends Component {\n  state = {\n    searchQuery: \"\",\n    searchResults: [],\n    searchType: \"\" // to use different api url\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { searchQuery, searchType } = this.state;\n\n    let apiMediaType = \"\";\n    searchType === \"Film\" ? (apiMediaType = \"movie\") : (apiMediaType = \"tv\")\n\n    this.setState({ searchResults: [] })\n\n    // THIS SHOULD GO TO EXTERNAL API SERVICES\n    axios({\n      method: \"GET\",\n      url: `https://api.themoviedb.org/3/search/${apiMediaType}?api_key=${process.env.REACT_APP_CLIENT_KEY}&query=${searchQuery}&page=1`\n    })\n      .then(data => {\n        console.log(data.data.results);\n        this.setState({ searchResults: data.data.results });\n      })\n      .catch(err => console.log(err));\n  };\n\n  selectMediaType = event => {\n    const { name } = event.target;\n    this.setState({ searchResults: [], searchType: name, searchQuery: \"\" });\n  };\n\n  render() {\n    const { searchQuery, searchResults, searchType } = this.state;\n\n    return (\n      <div>\n        <div>\n          <button onClick={this.selectMediaType} name=\"Series\">\n            Series\n          </button>\n          <button onClick={this.selectMediaType} name=\"Film\">\n            Films\n          </button>\n        </div>\n\n        {searchType === \"\" ? null : (\n          <form onSubmit={this.handleFormSubmit}>\n            <input\n              type=\"text\"\n              name=\"searchQuery\"\n              value={searchQuery}\n              onChange={this.handleChange}\n              placeholder={searchType}\n            />\n            <input type=\"submit\" value=\"Search\" />\n          </form>\n        )}\n\n        <div>\n          <ul>\n            {searchResults.map(selectedResult => {\n              return (\n                <AddFilmInfo\n                  selectedResultProp={selectedResult}\n                  searchTypeProp={searchType}\n                  userProp={this.props.user}\n                />\n              );\n            })}\n          </ul>\n          <Link to={\"/backlog\"}>\n            <h4>Back</h4>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(AddFilms);","//\tcomponents/AnonRoute.js\n\n// gives you public pages/components\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withAuth } from \"../lib/Auth\";\n\nfunction AnonRoute({ component: Component, isLoggedIn, ...rest }) {\n  return (\n    // <Route\n    //   {...rest}\n    //   render={props =>\n    //     !isLoggedIn ? <Component {...props} /> : <Redirect to=\"/private\" />\n    //   }\n    // />\n    <Route\n      {...rest}\n      render={function(props) {\n        if (isLoggedIn) return <Redirect to=\"/backlog\" />;\n        else if (!isLoggedIn) return <Component {...props} />;\n      }}\n    />\n  );\n}\n\nexport default withAuth(AnonRoute);\n","//\tcomponents/PrivateRoute.js\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withAuth } from \"../lib/Auth\";\n\nfunction PrivateRoute({ component: Component, isLoggedIn, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={function(props) {\n        if (isLoggedIn) return <Component {...props} />;\n        else if (!isLoggedIn) return <Redirect to=\"/login\" />;\n      }}\n    />\n  );\n}\n\nexport default withAuth(PrivateRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Backlog from \"./pages/Backlog\";\nimport AddFilms from \"./pages/AddFilms\";\n\nimport AnonRoute from \"./components/AnonRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Navbar />\n\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n\n          <AnonRoute exact path=\"/signup\" component={Signup} />\n          <AnonRoute exact path=\"/login\" component={Login} />\n\n          <PrivateRoute exact path=\"/backlog\" component={Backlog} />\n          <PrivateRoute exact path=\"/add/films\" component={AddFilms} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { AuthProvider } from \"./lib/Auth\";\nimport App from \"./App\";\nrequire('dotenv').config();\n\nReactDOM.render(\n  <Router>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}